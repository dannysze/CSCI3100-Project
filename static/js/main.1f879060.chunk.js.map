{"version":3,"sources":["components/CustomButton.js","components/getaddr.js","useToken.js","UserContext.js","components/Header.js","components/Navbar.js","components/CustomeDatePicker.js","components/Event/EventForm.js","components/Event/Events.js","components/Event/EventCard.js","components/Calendars/Calendar.js","components/UpcomingEvents.js","components/Footer.js","pages/Home.js","pages/Login.js","components/Calendars/Schedule.js","components/Event/Event_record.js","components/History.js","pages/MyCalendar.js","components/Event/SearchResultCard.js","pages/SearchPage.js","ProtectedRoute.js","pages/User.js","pages/ResetPassword.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","type","onClick","content","className","SignUpButton","CloseButton","style","CalendarButton","classes","clickHandler","RedeemButton","FormButton","expired","disabled","getaddr","isLocal","remote","address","port","localPort","useToken","useState","tokenString","localStorage","getItem","userToken","JSON","parse","token","getToken","setToken","setItem","stringify","UserContext","createContext","AddValueBox","closeModal","userInfo","cardNumber","setCardNumber","password","setPassword","errormsg","alert","redeemResult","setRedeemResult","onChangeHandler","event","target","name","value","redeemCard","a","preventDefault","requestOptions","method","headers","body","card_id","card_pw","user_id","fetch","response","json","result","ok","err","console","log","stopPropagation","justifyContent","id","onSubmit","placeholder","onChange","visibility","Header","useContext","user","headerItems","setUser","title","Math","round","account_balance","url","icon","cName","onclick","setShowRedeem","username","removeItem","window","location","replace","showRedeem","left","position","CSSTransition","in","timeout","classNames","unmountOnExit","map","item","index","href","navItems","dropItems","Navbar","showDropdownMenu","setShowDropdownMenu","onMouseOver","onMouseLeave","to","dropDownItem","idx","CustomDatePicker","startDate","showTime","minDate","selected","date","dateFormat","placeholderText","showTimeInput","sqlToJsDate","sqlDate","sqlTime","sqlDateArr1","split","sYear","sMonth","Number","toString","sDay","sqlTimeArr","Date","EventForm","dismissHandler","edit","editInfo","start_date","start_time","startSelectedDate","setStartSelectedDate","end_date","end_time","addHours","endSelectedDate","setEndSelectedDate","event_name","visible","repeat","venue","capacity","description","ticket","refund","refund_days","category","setEvent","file","setFile","img","setImg","checkTime","i","toSqlTime","getHours","getMinutes","getSeconds","join","toSqlDate","getFullYear","getMonth","getDate","submitHandler","e","data","FormData","append","Object","keys","forEach","key","reload","editHandler","event_pic","event_id","ticketCheckbox","document","getElementById","elements","namedItem","ticketInput","refundInput","checked","fontSize","top","accept","uploadedFile","files","FileReader","reader","onload","getElementsByClassName","display","readAsDataURL","src","alt","gridRow","gridColumn","paddingRight","paddingLeft","padding","min","paddingBottom","marginLeft","Events","height","events","toggle","showEvent","setShow","width","EventModal","compareTime","joinedEvent","checkTimeClash","joinedEvents","clashedEvents","filter","joinEvent","clashes","res","length","Modal","show","onHide","dialogClassName","aria-labelledby","closeButton","Body","Row","Col","sm","img_loc","ListGroup","variant","Item","organizer","days_for_refund","data-spy","EventCard","substring","Event","propTypes","PropTypes","object","isRequired","func","dayNames","monthNames","takeMonth","days","start","startOfWeek","startOfMonth","startOfDay","end","endOfWeek","endOfMonth","day","calendarObj","getDay","sunday","differenceInCalendarDays","today","push","addDays","CalendarHeader","month","year","previousMonth","nextMonth","textAlign","CalendarItems","props","color","onDoubleClick","doubleClickHandler","delay","setTimeout","addEventListener","clearTimeout","CalendarEvent","styles","CalendarTag","hide","Calendar","heightHandler","initialInfo","calendarInfo","setCalendarInfo","setEvents","eventForm","setEventForm","eventCardModal","setEventCardModal","useEffect","fetchEvents","eventsFromServer","getEvents","dayRecord","createEventForm","showEventCardModal","eventModal","setEventModal","getYear","newMonth","subMonths","addMonths","calendarArr","span","startRow","getWeekOfMonth","colNum","diffDays","differenceInDays","diffWeeks","differenceInCalendarWeeks","Array","_","curPos","pos","colSpan","alignSelf","tagsArr","stickTags","ev","UpcomingEvents","upcomingEvents","upcomingEvent","maxHeight","Footer","Home","setHeight","Container","fluid","md","viewHeight","clientHeight","Login","showSignUp","checkValid","defaultResult","setUsername","email","setEmail","userType","setUserType","setShowSignUp","valid","setValid","resetPassword","setResetPassword","loginResult","setLoginResult","signupResult","setSignupResult","resetResult","setResetResult","loginChangeHandler","signUpChangeHandler","test","resetPasswordHandler","clearForm","login","signup","resetpassword","forms","getElementsByTagName","reset","signUpFields","password_double","move","action","nethod","required","errorMsg","marginTop","box","takeWeek","scheduleObj","Schedule","scheduleInfo","setScheduleInfo","weekStart","newWeek","subWeeks","addWeeks","scheduleArr","fontWeight","allDayEventRecord","slice","frequency","allDayEvent","max","rangeStart","row","stickAllDayEvent","col","dateTime","addMinutes","thisWeekEvent","scheduleEvent","rowStart","rowSpan","minutesDiff","differenceInMinutes","startMinute","startHour","endMinute","endHour","floor","fontStyle","Eventrecord","showDetail","toggleShowDetail","scrollHeight","editForm","setEditForm","formInfo","deleteEvent","confirm","userRefund","whiteSpace","transform","margin","organizer_id","History","MyCalendar","xs","SearchResultCard","showMore","setShowMore","SearchPage","searchInfo","setSearchInfo","history","useHistory","searchResult","setSearchResult","parseInt","categoryArr","indexOf","splice","submitSearch","params","URLSearchParams","toJSON","then","price","htmlFor","ProtectedRoute","Component","component","rest","render","User","pfp","getUser","fileUploadHandler","entries","val","ResetPassword","search","useLocation","searchParams","get","doublepassword","setDoublePassword","sendRequest","for","App","Provider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1f879060.chunk.js","sourcesContent":["// A set of customized buttons with CSS and changeable  \r\nimport { ArrowRightCircle, X, CaretLeftFill, CaretRightFill, ArrowRepeat } from 'react-bootstrap-icons'\r\nimport '../styles/components/CustomButton.css'\r\n\r\nconst CustomButton = () => {\r\n  return (\r\n    <button></button>\r\n  )\r\n}\r\n\r\nexport default CustomButton\r\n\r\nconst LoginButton = ({ type, onClick, content }) => {\r\n  return (\r\n    <button className=\"login-page-button login-button\" type={type} onClick={onClick}>\r\n      {content}&nbsp;\r\n      <ArrowRightCircle />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { LoginButton }\r\n\r\nconst SignUpButton = ({ type, onClick, content }) => {\r\n  return (\r\n    <button className=\"login-page-button signup-button\" type={type} onClick={onClick}>\r\n      {content}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { SignUpButton }\r\n\r\nconst CloseButton = ({ onClick, style }) => {\r\n  return (\r\n    <button onClick={onClick} className=\"login-page-button close-button\" style={style}><X /></button>\r\n  )\r\n}\r\n\r\nexport { CloseButton }\r\n\r\nconst CalendarButton = ({ classes, clickHandler }) => {\r\n  return (\r\n    <button className={`calendar-button ${classes} flex-center`} onClick={clickHandler}>{classes === \"calendar-button-reset\" ? <ArrowRepeat /> : (classes === \"calendar-button-left\" ? <CaretLeftFill /> : <CaretRightFill />)}</button>\r\n  )\r\n}\r\n\r\nexport { CalendarButton }\r\n\r\nconst RedeemButton = ({ classes, clickHandler, content }) => {\r\n  return (\r\n    <button className={`redeem-button ${classes}`} onClick={clickHandler}>\r\n      {content}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { RedeemButton }\r\n\r\nconst FormButton = ({ classes, clickHandler, content, expired = false }) => {\r\n  return (\r\n    <button className={`form-button ${classes}`} onClick={clickHandler} disabled={expired} type=\"button\">\r\n      {content}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { FormButton }","//for getting address for backend\r\n//return local address if true\r\n//return remote address if false\r\nconst getaddr = (isLocal=true) => {\r\n    const remote = {address: 'csci3100-proj.cobhjw2xjj8l.us-east-1.rds.amazonaws.com',\r\n              port: 3306,\r\n             }\r\n    const localPort = 5000;\r\n    \r\n    if (isLocal){\r\n        return 'http://localhost:' + localPort + '/';\r\n    }else{\r\n        return 'http://' + remote.address + ':' + remote.port + '/';\r\n    }\r\n}\r\n\r\nexport default getaddr\r\n\r\n\r\n","import { useState } from 'react';\r\n//from web\r\n//for saving and getting token for authentication\r\n//will store token in local storage of browser\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}","import {createContext} from \"react\";\r\n//context hook for user info\r\n\r\nexport const UserContext = createContext(null);\r\n\r\n","// Header component used in every Pages\r\nimport React, { useState, useContext } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { RedeemButton } from './CustomButton';\r\nimport getaddr from './getaddr';\r\nimport useToken from '../useToken'\r\nimport { UserContext } from '../UserContext';\r\nimport '../styles/components/Header.css';\r\n\r\n// Main component\r\nconst Header = () => {\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const {token, setToken} = useToken();\r\n  const {user, setUser} = useContext(UserContext);\r\n\r\n  // logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.replace(\"/login\");\r\n  };\r\n\r\n  // header items displayed in the top right corner\r\n  const headerItems = [\r\n    {\r\n        title: `$${Math.round(user.account_balance * 10) / 10}`,\r\n        url: '#',\r\n        icon: <Icon.Plus />,\r\n        cName: 'header-items',\r\n        onclick: () => { setShowRedeem(true) }\r\n    },\r\n    {\r\n        title: `${user.username} `,\r\n        url: '#',\r\n        icon: <Icon.PersonCircle />,\r\n        cName: 'header-items'\r\n    },\r\n    {\r\n        title: 'Log out ',\r\n        url: '#',\r\n        icon: <Icon.BoxArrowRight />,\r\n        cName: 'header-items',\r\n        onclick: () => {logout()}\r\n    },\r\n  ]\r\n  // redeem box showing state\r\n  const [showRedeem, setShowRedeem] = useState(false);\r\n\r\n  // redeem box closing handler\r\n  const closeModal = () => {\r\n    setShowRedeem(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 style={{left: '30px', position: 'absolute'}}>CalEvent</h1>\r\n      {/* showing redeem box with css transition effect */}\r\n      <CSSTransition\r\n        in={showRedeem}\r\n        timeout={500}\r\n        classNames={'add-value-box-'}\r\n        unmountOnExit\r\n      >\r\n        <AddValueBox closeModal={closeModal} userInfo={user}/>\r\n      </CSSTransition>\r\n      {/* rendering header items */}\r\n      {headerItems.map((item, index) => <a href={item.url} className={`flex-center ${item.cName}`} key={index} onClick={item.onclick}>{item.title}{item.icon}</a>)}\r\n    </div>\r\n  )\r\n}\r\n\r\n// redeem box component\r\n// props:\r\n// closeModal: closing handler\r\n// userInfo: the info of the user\r\nconst AddValueBox = ({ closeModal, userInfo }) => {\r\n  \r\n  // initializing the state\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [redeemResult, setRedeemResult] = useState({errormsg:\"\", alert:false});\r\n  \r\n  // form change handler\r\n  const onChangeHandler = (event) => {\r\n    event.target.name === 'card_id' ? setCardNumber(event.target.value) : setPassword(event.target.value);\r\n    setRedeemResult({errormsg:\"\", alert:false});\r\n  } \r\n\r\n  const redeemCard = async (event) => {\r\n    event.preventDefault();\r\n    // send request POST /add_value\r\n    // const form = new FormData(document.getElementById(\"redeem-form\"));\r\n    // form.append('user_id', userInfo.user_id)\r\n    if(!cardNumber||!password){\r\n      setRedeemResult({errormsg:\"No fields should be left blank\", alert:true});\r\n      return;\r\n    }\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({card_id:cardNumber, card_pw:password, user_id:userInfo.user_id})\r\n    };\r\n    let response = await fetch(getaddr()+'add_value', requestOptions);\r\n    let result = await response.json();\r\n    try{\r\n      if (!response.ok) {\r\n        setRedeemResult({errormsg:result['error'],alert:true})\r\n      } else {\r\n        setRedeemResult({errormsg:result['success'],alert:true})\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    } \r\n  }\r\n\r\n  return (\r\n      // customized Modal pop up\r\n      <div className=\"add-value--background\" onClick={closeModal}>\r\n        <div className=\"add-value--container\" onClick={event => { event.stopPropagation(); }}>\r\n          <h2 className=\"flex-center\" style={{justifyContent: 'flex-start'}}>Redeem gift card&nbsp;<Icon.Cash /></h2>\r\n          {/* form input for redeeming pre paid card */}\r\n          <form id=\"redeem-form\" onSubmit={redeemCard}>\r\n            <div>\r\n              <input type=\"text\" name=\"card_id\" placeholder=\"Card number\" onChange={onChangeHandler}/>\r\n            </div>\r\n            <div>\r\n              <input type=\"password\" name=\"card_pw\" placeholder=\"Password\" onChange={onChangeHandler}/>\r\n            </div>\r\n            {<div className=\"alert-box\" style={redeemResult.alert ? {visibility: 'visible'} : {visibility: 'hidden'}}>{redeemResult.errormsg}</div>}\r\n            {/* customized button */}\r\n            <RedeemButton classes={''} content={`Redeem`} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Header","// Navbar component used in every page\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { CaretDownFill, House,  Search } from 'react-bootstrap-icons';\r\nimport '../styles/components/Navbar.css';\r\n\r\n// Navbar items array\r\nconst navItems = [\r\n    {\r\n      title:'Home',\r\n      url: '/',\r\n      icon: <House />,\r\n      cName: 'nav__menu-item'\r\n    },\r\n    {\r\n      title:' My Page ',\r\n      url: '/myCalendar',\r\n      cName: 'drop nav__menu-item'\r\n    },\r\n    {\r\n      title:'Search',\r\n      url: '/search',\r\n      icon: <Search />,\r\n      cName: 'nav__menu-item'\r\n    },\r\n]\r\n// dropdown menu items\r\nconst dropItems = [\r\n  {\r\n    title:'My Schedule',\r\n    url: '/myCalendar',\r\n    cName: 'nav__submenu-items'\r\n  },\r\n]\r\n\r\n// Main component\r\nconst Navbar = () => {    \r\n  // state of deopdown menu\r\n  const [showDropdownMenu, setShowDropdownMenu] = useState(false);\r\n  \r\n  return(\r\n    <nav className='nav'>\r\n      <ul className='nav__menu'>\r\n        {/* creating nav item in <ul> */}\r\n        {navItems.map((item, index) => {\r\n          return ( \r\n            // check if there is a dropdown menu\r\n            item.cName === 'drop nav__menu-item' ? \r\n              <li \r\n                className={item.cName} \r\n                key={index} \r\n                onMouseOver={() => setShowDropdownMenu(true)} \r\n                onMouseLeave={() => setShowDropdownMenu(false)}\r\n              >\r\n                <Link to={item.url}>\r\n                  {item.title}&nbsp;\r\n                  <CaretDownFill />\r\n                </Link>\r\n                <CSSTransition \r\n                  in={showDropdownMenu}\r\n                  timeout={300}\r\n                  classNames='dropdown'\r\n                  unmountOnExit={false}\r\n                >\r\n                  <ul className='nav__submenu'>\r\n                    {dropItems.map((dropDownItem, idx) => {\r\n                      return (\r\n                        <li className={dropDownItem.cName} key={idx}>\r\n                          <Link to={dropDownItem.url}>{dropDownItem.title}</Link>\r\n                        </li>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </CSSTransition>\r\n              </li>\r\n              // normal nav item\r\n            : <li className={`${item.cName}`} key={index}>\r\n                <Link to={item.url} key={index} className={\"flex-center\"}>{item.title}&nbsp;{item.icon}</Link>\r\n              </li>\r\n          ) \r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","// cutomized date picker using react-datepicker library\r\nimport React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n// main component\r\n// props:\r\n// startDate: if exists, the default selected date of the datepicker\r\n// showTime: if true, there would also be time picker\r\n// minDate: the earliest date can be chosen\r\nconst CustomDatePicker = ({ onChangeHandler, placeholder, startDate, showTime = true, minDate = false}) => {\r\n\r\n  return (\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={date => onChangeHandler(date)}\r\n      dateFormat={`MM/dd/yyyy  ${showTime ? 'hh:mmaa' : ''}`}\r\n      placeholderText={placeholder}\r\n      showTimeInput={showTime}\r\n      minDate={minDate}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CustomDatePicker","// This is the form (modal) that used for creating events and editing events \r\nimport React, { useState, useContext} from 'react';\r\nimport { addHours } from 'date-fns';\r\nimport CustomDatePicker from '../CustomeDatePicker';\r\nimport { Image, Tag, GeoAlt, CalendarEvent, People, CashStack } from 'react-bootstrap-icons';\r\nimport { CloseButton, FormButton } from '../CustomButton';\r\nimport useToken from '../../useToken';\r\nimport {UserContext} from '../../UserContext';\r\nimport getaddr from '../getaddr';\r\nimport '../../styles/components/Event/EventForm.css';\r\n\r\n// sqlToJsDate convert the date from format in sql db (YYYY-MM-DD) to js Date obj\r\nconst sqlToJsDate = (sqlDate, sqlTime) => {\r\n  if(!sqlDate||!sqlTime) return;\r\n  var sqlDateArr1 = sqlDate.split(\"-\");\r\n  var sYear = sqlDateArr1[0];\r\n  var sMonth = (Number(sqlDateArr1[1]) - 1).toString();\r\n  var sDay = sqlDateArr1[2];\r\n  var sqlTimeArr = sqlTime.split(\":\");\r\n  return new Date(sYear,sMonth,sDay,sqlTimeArr[0],sqlTimeArr[1],sqlTimeArr[2]);\r\n}\r\n\r\n// The main component of the Eventform \r\n// Props:\r\n// dismissHandler: click event for closing the event form modal\r\n// startDate: indicate the start date of the date picker in the form\r\n// edit: Indicate the event form is used for creating or editing\r\n// editInfo: if the form is for editing, the current event info is sent to here\r\nconst EventForm = ({ dismissHandler, startDate, edit, editInfo}) => {\r\n\r\n  // setting the props to the state (depending on the \"edit\" props)\r\n  const [startSelectedDate, setStartSelectedDate] = useState(edit ? sqlToJsDate(editInfo.start_date,editInfo.start_time) : startDate);\r\n  const [endSelectedDate, setEndSelectedDate] = useState(edit ? sqlToJsDate(editInfo.end_date,editInfo.end_time) : addHours(startDate, 1));\r\n  const [event, setEvent] = useState( edit ? editInfo : {\r\n    user_id: '',\r\n    event_name: '',\r\n    start_date: '',\r\n    start_time: '',\r\n    end_date: '',\r\n    end_time: '',\r\n    visible: 0,\r\n    repeat: 0,\r\n    venue: '',\r\n    capacity: 0,\r\n    description: '',\r\n    ticket: 10,\r\n    refund: 1,\r\n    refund_days: 0,\r\n    category: '',\r\n  });\r\n\r\n  const {token, setToken} = useToken();\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [reload, setReload] = useState(false);\r\n  const [file, setFile] = useState({\r\n    'src': '#',\r\n    'value': '',\r\n  });\r\n\r\n  const [img, setImg] = useState()\r\n  const fileSelectedHandler = uploadedFile => {\r\n    let img = uploadedFile.target.files[0];\r\n\r\n    if (window.FileReader) {\r\n      let reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setFile({\r\n          ...file,\r\n          'src': e.target.result,\r\n        })\r\n        // to displat the uploaded image preview\r\n        document.getElementsByClassName('create-event-form--image-upload')[0].style.display = 'none';\r\n        document.getElementsByClassName('create-event-form--image-wrapper')[0].style.display = 'block';\r\n      }\r\n      reader.readAsDataURL(img)\r\n      setFile({\r\n        ...file,\r\n        'value': reader\r\n      })\r\n    } else {\r\n     alert(\"Your browser does not support for preview\")\r\n    }\r\n    console.log(img);\r\n    setImg(img);\r\n  }\r\n\r\n  //from https://stackoverflow.com/questions/18229022/how-to-show-current-time-in-javascript-in-the-format-hhmmss/18229123\r\n  const  checkTime = (i) => {\r\n    return (i < 10) ? \"0\" + i : i;\r\n  }\r\n\r\n  // change the js Date obj to our sql db time (hh:mm:ss) string\r\n  const toSqlTime = (date) =>{\r\n    let h = checkTime(date.getHours());\r\n    let m = checkTime(date.getMinutes());\r\n    let s = checkTime(date.getSeconds());\r\n    return [h, m, s].join(':');\r\n  }\r\n\r\n  // change the js Date obj to our sql db date (yyyy-mm-dd) string\r\n  const toSqlDate = (date) => {\r\n    let y = date.getFullYear();\r\n    let m = checkTime(date.getMonth()+1);\r\n    let d = checkTime(date.getDate());\r\n    return [y, m, d].join('-');\r\n  }\r\n\r\n  const submitHandler = async e => {\r\n    // e.preventDefault();\r\n    let data = new FormData();\r\n    console.log(img);\r\n    if(img) data.append('img', img);\r\n    Object.keys(event).forEach(key => data.append(key, event[key]));\r\n    console.log(event);\r\n    await fetch(getaddr()+'create_event', {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth': token,\r\n        //'Content-Type': 'multipart/form-data',\r\n      },\r\n      body: data,\r\n    });\r\n    dismissHandler();\r\n    window.location.reload(true);\r\n    //setReload(!reload);\r\n  }\r\n\r\n  const editHandler = async e => {\r\n    e.preventDefault();\r\n    let data = new FormData();\r\n    Object.keys(event).forEach(key => data.append(key, event[key]));\r\n    // console.log(user.user_id);\r\n    data.append('user_id',user.user_id);\r\n    await fetch(getaddr()+'edit_event', {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth': token,\r\n        //'Content-Type': 'multipart/form-data',\r\n      },\r\n      body: data,\r\n    });\r\n    // console.log(img);\r\n    if(!img) {\r\n      dismissHandler();\r\n      window.location.reload(true);    \r\n      return;\r\n    }\r\n    let event_pic = new FormData();\r\n    console.log(img);\r\n    event_pic.append('img', img);\r\n    event_pic.append('event_id',event.event_id);\r\n    await fetch(getaddr()+'event_pic', {\r\n      method: 'POST',\r\n      headers: {\r\n        'auth': token,\r\n        //'Content-Type': 'multipart/form-data',\r\n      },\r\n      body: event_pic,\r\n    });\r\n    dismissHandler();\r\n    window.location.reload(true);\r\n  }\r\n   // handling the input of the event form\r\n   const onChangeHandler = (e) => {\r\n    const ticketCheckbox = document.getElementById('create-event-form').elements.namedItem('free');\r\n    const refundCheckbox = document.getElementById('create-event-form').elements.namedItem('refund');\r\n    const ticketInput = document.getElementById('create-event-form').elements.namedItem('ticket');\r\n    const refundInput = document.getElementById('create-event-form').elements.namedItem('refund_days');\r\n    if ((e.target.type === 'checkbox') && !e.target.checked) {\r\n      // e.target.checked = true;\r\n      if (e.target.name === 'free') {\r\n        ticketInput.disabled = false;\r\n        setEvent({...event, [e.target.name]: 0, ticket: ''});\r\n      } else if (e.target.name === 'refund') {\r\n        refundInput.disabled = true;\r\n        refundInput.value = '';\r\n        // console.log(document.getElementById('create-event-form').elements.namedItem('refund_days'))\r\n        setEvent({...event, [e.target.name]: 0, refund_days: 0});\r\n      }\r\n    } else if ((e.target.type === 'checkbox') && e.target.checked) {\r\n      // e.target.checked = false;\r\n      if (e.target.name === 'free') {\r\n        ticketInput.disabled = true;\r\n        ticketInput.value = '';\r\n        refundInput.disabled = true;\r\n        refundInput.value = '';\r\n        setEvent({...event, [e.target.name]: 1, refund: 0, ticket: 0, refund_days: 0});\r\n      } else if (e.target.name === 'refund' && !ticketCheckbox.checked) {\r\n        refundInput.disabled = false;\r\n        // console.log(document.getElementById('create-event-form').elements.namedItem('refund_days'))\r\n        setEvent({...event, [e.target.name]: 1, refund_days: 1});\r\n      }\r\n    } else {\r\n      setEvent({...event, [e.target.name]: e.target.value, \r\n                          start_time:toSqlTime(startSelectedDate),\r\n                          start_date:toSqlDate(startSelectedDate),\r\n                          end_time:toSqlTime(endSelectedDate),\r\n                          end_date:toSqlDate(endSelectedDate),\r\n                          visible:user.type});\r\n    }\r\n  }\r\n  \r\n  return (\r\n    //  The event form will be displayed in the modal pop up\r\n    <div className=\"create-event-form--background flex-center\" onClick={dismissHandler}>\r\n      <div className=\"create-event-form--container\" onClick={(e) => e.stopPropagation()}>\r\n        <CloseButton onClick={dismissHandler} style={{fontSize: '2em', top: '10px', left: '10px'}} />\r\n        <h1 className=\"create-event-form--title\">{edit ? 'edit' : 'create'} event</h1>\r\n        {/* The <form> component with different input fields in the event form */}\r\n        <form id=\"create-event-form\">\r\n          {/* File image upload field\r\n           */}\r\n          <div className=\"create-event-form--image-upload-container flex-center\">\r\n            <input type=\"file\" accept=\"image/*\" onChange={fileSelectedHandler} />\r\n            <div className=\"create-event-form--image-upload\">\r\n              <h1><Image /></h1>\r\n              <h4>DRAG and DROP OR SELECT image</h4>\r\n            </div>\r\n            <div className=\"create-event-form--image-wrapper\">\r\n              <img className=\"create-event-form--uploaded-image\" src={file.src} alt=\"Your image\" />\r\n              <div className=\"create-event-form--remove-imgae-button\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* A form row with 2 input fields */}\r\n          <div className=\"create-event-form--input-group\">\r\n            {/* Event name field */}\r\n            <div className=\"create-event-form--input\">\r\n              <span className=\"create-event-form--input-prepend flex-center\">\r\n                <CalendarEvent />\r\n              </span>\r\n              <input type=\"text\" name=\"event_name\" placeholder=\"Event\" onChange={onChangeHandler} value={event.event_name} />\r\n            </div>\r\n            {/* Event venue field */}\r\n            <div className=\"create-event-form--input\">\r\n              <span className=\"create-event-form--input-prepend flex-center\">\r\n                <GeoAlt />\r\n              </span>\r\n              <input type=\"text\" name=\"venue\" placeholder=\"Venue\" onChange={onChangeHandler} value={event.venue} />\r\n            </div>\r\n          </div>\r\n          {/* Second row */}\r\n          <div className=\"create-event-form--input-group\">\r\n            {/* Start date picker */}\r\n            <div className=\"create-event-form--input create-event-form--datepicker\">\r\n              <CustomDatePicker\r\n                onChangeHandler={(date) => {setStartSelectedDate(date)}}\r\n                startDate={startSelectedDate}\r\n                placeholder=\"Select Start Time\"\r\n              />\r\n            </div>\r\n            {/* End date picker */}\r\n            <div className=\"create-event-form--input\">\r\n              <CustomDatePicker \r\n                onChangeHandler={(date) => {setEndSelectedDate(date)}}\r\n                startDate={endSelectedDate}\r\n                placeholder=\"Select End Time\"\r\n                minDate={startSelectedDate}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Remaining input fields */}\r\n          <div className=\"create-event-form--input-group create-event-form--input-grid\">\r\n            {/* Event categories select menu */}\r\n            <div className=\"create-event-form--input\" style={{gridRow: '1 / span 1', gridColumn: '1', paddingRight: '5px'}}>\r\n              <span className=\"create-event-form--input-prepend flex-center\">\r\n                <Tag />\r\n              </span>\r\n              <select className=\"\" name=\"category\" placeholder=\"\" onChange={onChangeHandler}>\r\n                {['Sport', 'Music', 'Academic', 'Health', 'Festival', 'Career-related','Others'].map((item, index) => (\r\n                  <option value={item} key={index}>{item}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {/* Event description textarea */}\r\n            <div className=\"create-event-form--input\" style={{gridRow: '2 / span 2', gridColumn: '1', paddingRight: '5px', paddingLeft: '0px'}}>\r\n              <textarea className=\"\" name=\"description\" placeholder=\"Description...\" onChange={onChangeHandler} value={event.description}></textarea>\r\n            </div>\r\n            {/* Event capacity input field */}\r\n            <div className=\"create-event-form--input\" style={{gridRow: '1', gridColumn: '2', paddingRight: '0', paddingLeft: '5px'}}>\r\n              <span className=\"create-event-form--input-prepend flex-center\">\r\n                <People />\r\n              </span>\r\n              <input type=\"number\" name=\"capacity\" placeholder=\"Capacity\" onChange={onChangeHandler} value={event.capacity} />\r\n            </div>\r\n            {/* Event fee and free checkbox */}\r\n            <div className=\"create-event-form--input create-event-form--checkbox\" style={{gridRow: '2', gridColumn: '2', paddingRight: '0'}}>\r\n              <span className=\"create-event-form--input-prepend flex-center\" style={{padding: '9px 8px'}}>\r\n                <CashStack />\r\n              </span>\r\n              <input type=\"number\" name=\"ticket\" placeholder=\"Ticket\" onChange={onChangeHandler} min=\"0\" value={event.ticket} disabled={edit}/>\r\n              <span className=\"create-event-form--input-append\">\r\n                <label className=\"create-event-form--input-label\">\r\n                  <input type=\"checkbox\" name=\"free\" onChange={onChangeHandler} checked={event.ticket === 0} disabled={edit}/>&nbsp;Free\r\n                </label>\r\n              </span>\r\n            </div>\r\n            {/* Event refund before input field */}\r\n            <div className=\"create-event-form--input create-event-form--checkbox\" style={{gridRow: '3', gridColumn: '2', paddingRight: '0px'}}>\r\n              <input type=\"number\" name=\"refund_days\" placeholder=\"Refund before\" onChange={onChangeHandler} style={{paddingLeft: '16px'}} min=\"0\" disabled={edit}/>\r\n              <span className=\"create-event-form--input-append\">\r\n                <label className=\"create-event-form--input-label\">\r\n                  <input type=\"checkbox\" name=\"refund\" onChange={onChangeHandler} value={1} checked={event.refund > 0} disabled={edit}/>&nbsp;Allow refund\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* Form button component import from customized button */}\r\n          <div className=\"create-event-form--input-group\" style={{paddingBottom: '20px', marginLeft: 'auto'}}>\r\n            <FormButton content={edit ? \"edit\" : \"Create\"} clickHandler={edit ? editHandler : submitHandler}/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventForm\r\n","// Component including the event cards at the main page and event modal\r\nimport { useState, useContext} from 'react'\r\nimport { Container, Row, Col, Modal, ListGroup, Button, ListGroupItem } from 'react-bootstrap'\r\nimport EventCard from './EventCard'\r\nimport '../../styles/components/Event/Events.css'\r\nimport { FormButton } from \"../CustomButton.js\"\r\nimport {UserContext} from '../../UserContext'\r\nimport useToken from '../../useToken'\r\nimport getaddr from '../../components/getaddr'\r\n\r\n// sqlToJsDate convert the date from format in sql db (YYYY-MM-DD) to js Date obj\r\nconst sqlToJsDate = (sqlDate, sqlTime) => {\r\n  if(!sqlDate||!sqlTime) return;\r\n  var sqlDateArr1 = sqlDate.split(\"-\");\r\n  var sYear = sqlDateArr1[0];\r\n  var sMonth = (Number(sqlDateArr1[1]) - 1).toString();\r\n  var sDay = sqlDateArr1[2];\r\n\r\n  var sqlTimeArr = sqlTime.split(\":\");\r\n\r\n  return new Date(sYear, sMonth, sDay, sqlTimeArr[0], sqlTimeArr[1], sqlTimeArr[2]);\r\n}\r\n\r\n// main component\r\n// Props:\r\n// events: the array of filtered events\r\n// title: title of the container\r\nfunction Events({ height, events, title}) {\r\n  const [showEvent, setShow] = useState({ toggle: false, event: {} });\r\n\r\n  return (\r\n    <div className='Events' >\r\n      <div className=\"outer\" style={{ width: \"100%\" }}>\r\n        <h1>{title}</h1>\r\n        <div className='events' style={{ height: `${height - 61}px` }}>\r\n          {/* generating the event cards */}\r\n          {events.map((event, idx) => (\r\n            <EventCard key={idx} event={event} onClick={() => setShow({ toggle: true, event: event })} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n      {/* modal pop up which show the details of selected event */}\r\n      <EventModal showEvent={showEvent} setShow={setShow}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Events;  \r\n\r\n// Modal pop up with selected event details\r\nconst EventModal = ({ showEvent, setShow }) => {\r\n  const {user, setUser} = useContext(UserContext);\r\n  const {token, setToken} = useToken();\r\n  const [confirm,setConfirm] = useState(0);\r\n\r\n  // //may need date conversion\r\n  const compareTime = (joinedEvent) => {\r\n      let event = showEvent.event;\r\n      if(((joinedEvent.start_time >= event.start_time && joinedEvent.start_time <= event.end_time)&&(joinedEvent.start_date >= event.start_date && joinedEvent.start_date <= event.end_date))\r\n          || ((joinedEvent.end_time >= event.start_time && joinedEvent.end_time <= event.end_time)&&(joinedEvent.end_date >= event.start_date && joinedEvent.end_date <= event.end_date)))\r\n      return true;\r\n  };\r\n\r\n  //check for time clashes with joined events\r\n  const checkTimeClash = async () => {\r\n      let joinedEvents = await (await fetch(getaddr()+'joined_events/' + user.user_id)).json();\r\n      let clashedEvents  = joinedEvents.filter(\r\n          joinedEvent => {return compareTime(joinedEvent);});\r\n      console.log(clashedEvents);\r\n      return clashedEvents;\r\n  };\r\n\r\n  // POST request for joining event\r\n  const joinEvent = async () => {\r\n    try{\r\n        let clashes = await checkTimeClash();\r\n        //console.log(clashes);\r\n        let res = await fetch(getaddr()+'join_event', {\r\n          method: 'POST',\r\n          headers: {\r\n            'auth': token,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({user_id:user.user_id,event_id:showEvent.event.event_id}),\r\n        });\r\n        let body = await res.json();\r\n        if (!res.ok){\r\n              alert(body['error']);\r\n        }else{\r\n          // generate a time clashing warning to user\r\n            clashes.length>0\r\n            ? alert('You has successfully joined the event but please note that the event coincides in time with some of the joined events.\\nYou can check in schedule.')\r\n            : alert('You has successfully joined the event.');\r\n        }\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n  };\r\n\r\n  //check whether the event is joinable: the event is not started yet and user is not organizer \r\n  const checkJoinable = () => {\r\n    return sqlToJsDate(showEvent.event.start_date, showEvent.event.start_time) >= new Date()&&user.type===0;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    {/* pop-up screen for showing complete selected event's information */}\r\n      <Modal\r\n        show={showEvent.toggle}\r\n        onHide={() => setShow({ toggle: false, event: {} })}\r\n        dialogClassName='custom-modal'\r\n        aria-labelledby='example-custom-modal-styling-title'\r\n      >\r\n        {/* the header bar of the pop-up screen */}\r\n        <Modal.Header className=\"pop-up-bar\" closeButton>\r\n          {/* <Modal.Title id='example-custom-modal-styling-title'>\r\n            {showEvent.event.name}\r\n          </Modal.Title> */}\r\n          <h1>E v e n t</h1>\r\n        </Modal.Header>\r\n        {/* the body of the pop-up screen */}\r\n        <Modal.Body>\r\n          {/* first part: row container to show the image and event information except event description */}\r\n          <Row className=\"row-container\">\r\n            {/* column container to show the image */}\r\n            <Col className=\"pop-img-container\" sm={4}>\r\n              {/* the  image */}\r\n              <img src={showEvent.event.img_loc} alt=\"event-photo\"></img>\r\n\r\n            </Col >\r\n            {/* columen container for information of the event */}\r\n            <Col className=\"pop-info-container\" sm={7}>\r\n              {/* the title of the event */}\r\n              <div className=\"pop-up-title\">{showEvent.event.name}</div>\r\n              {/* Bootstrap listgroup to show the event information */}\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item className=\"pop-info\">Organizer: {showEvent.event.username||showEvent.event.organizer}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Date: {showEvent.event.start_date === showEvent.event.end_date ? `${showEvent.event.start_date}` : `${showEvent.event.start_date}` + \"  to  \" + `${showEvent.event.end_date}`}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Time: {showEvent.event.start_time}&nbsp;-&nbsp;{showEvent.event.end_time}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Venue: {showEvent.event.venue}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Maximum Number of Participant: {showEvent.event.capacity === null ? \"Unlimited\" : `${showEvent.event.capacity}`}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Fee: {showEvent.event.ticket === 0 ? \"Free\" : `${showEvent.event.ticket}`}</ListGroup.Item>\r\n                <ListGroup.Item className=\"pop-info\">Days for refund: {showEvent.event.days_for_refund === null ? \"Not Allow\" : `${showEvent.event.days_for_refund}`}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          {/* second part: row container for the word \"Description\" */}\r\n          <Row >\r\n            <Col>\r\n              <div className=\"pop-description-head\">Description</div>\r\n            </Col>\r\n          </Row>\r\n          {/* third part: row container for the description body */}\r\n          <Row>\r\n            <Col sm={12}>\r\n              {/* the discription */}\r\n              <div className=\"pop-description\" data-spy=\"scroll\" >{showEvent.event.description}</div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={8}></Col>\r\n            <Col sm={1}>\r\n              {/* <button className=\"pop-button\">Join</button> */}\r\n              {/* the button for joining event */}\r\n              {/* only show when the event is not started yet and user is not organizer */}\r\n              {checkJoinable()&&<FormButton content=\"Join\" clickHandler={joinEvent}/>}\r\n            </Col>\r\n            <Col sm={3}>\r\n              {/* <button className=\"pop-button-organizer\">Contact Organizer</button> */}\r\n              {/* the button for contacting organizer */}\r\n              <FormButton className=\"pop-button-organizer\" content=\"Contact Organizer\" />\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { EventModal }","//This is a js file for creating the event card that shows in home page of CalEvents\r\nimport PropTypes from 'prop-types'\r\nimport \"../../styles/components/Event/EventCard.css\"\r\nimport { FormButton } from \"../CustomButton.js\";\r\nimport { EventModal } from '../Event/Events'\r\n\r\n\r\nconst EventCard = ({ event, onClick }) => {\r\n    // console.log(event)\r\n    //The following code is the card for showing upcoming events in home page\r\n    return (\r\n        // The container for making a card, and storing other card components inside the event card\r\n        <div className='card-container'>\r\n            {/* create space and show image inside the card */}\r\n            <div className='image-container'>\r\n                <img src={event.img_loc} alt=\"event photo\"></img>\r\n            </div>\r\n            {/* shows the event's title in the card */}\r\n            <h3 className='title'>{event.name}</h3>\r\n            {/* create space and show informations of the event */}\r\n            <div className=\"info-container\">\r\n                <div className='organizer'>Organizerd by <b>{event.username}</b></div>\r\n                <div className='datetime'>Time:&nbsp;{event.start_time.substring(0, 5)}&nbsp;-&nbsp;{event.end_time.substring(0, 5)}</div>\r\n                <div className='venue'>Date: {event.start_date === event.end_date ? `${event.start_date}` : `${event.start_date}` + \"  to  \" + `${event.end_date}`}</div>\r\n                <div className='venue'>Venue:&nbsp;{event.venue}</div>\r\n                <h3 className='description-head'>Description:</h3>\r\n                <p className='description-body'>{event.description}</p>\r\n            </div>\r\n            {/* A more button inside the card for use to click and see the complete information of the event, and perform options like join and contact organizer */}\r\n            <div className=\"card-btn\">\r\n                <button className=\"flex-center\" onClick={onClick}>More</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventCard\r\n\r\n\r\nEvent.propTypes = {\r\n    event: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}","// Calendar is the component at the main page\r\n// It display the public events created by organizers\r\nimport React, { useState, useEffect, useContext} from 'react';\r\nimport { startOfMonth, startOfWeek, endOfMonth, endOfWeek, startOfDay, addDays, getDate, getMonth, getYear, addMonths, subMonths, getWeekOfMonth, getDay, differenceInDays, differenceInCalendarDays, differenceInCalendarWeeks, getDaysInMonth } from 'date-fns';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { CalendarButton } from '../CustomButton';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport EventForm from '../Event/EventForm';\r\nimport EventCard from '../Event/EventCard';\r\nimport { EventModal } from '../Event/Events';\r\nimport getaddr from '../getaddr';\r\nimport {UserContext} from '../../UserContext';\r\nimport useToken from '../../useToken';\r\nimport '../../styles/components/Calendars/Calendar.css';\r\n\r\n// constants store the names of the calendar\r\nconst dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthNames = ['January', 'Feburay', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n// get the calendar days of specfied date\r\nconst takeMonth = (date = new Date()) => {\r\n  let days = [];\r\n  // find the first and last calendar day of a month\r\n  let start = startOfWeek(startOfMonth(startOfDay(date)));\r\n  let end = endOfWeek(endOfMonth(startOfDay(date)));\r\n\r\n  let day = start;\r\n  let calendarObj = {};\r\n  while (day < end) {\r\n    \r\n    calendarObj = {\r\n      'day': day,\r\n      'disabled': false,\r\n      'today': false,\r\n      'sunday': false,\r\n      'hide': 0\r\n    }\r\n    // disable when the day is not in the same month \r\n    if (day < startOfMonth(startOfDay(date)) || day > endOfMonth(startOfDay(date))) {\r\n      calendarObj.disabled = true;\r\n    }\r\n    if (getDay(day) === 0) {\r\n      calendarObj.sunday = true;\r\n    }\r\n    if (differenceInCalendarDays(day, new Date()) == 0) {\r\n      calendarObj.today = true;\r\n    }\r\n    days.push(calendarObj);\r\n    day = addDays(day, 1);\r\n  }\r\n  // return array of calendar days (obj)\r\n  return days;\r\n}\r\n\r\n// sqlToJsDate convert the date from format in sql db (YYYY-MM-DD) to js Date obj\r\nconst sqlToJsDate = (sqlDate, sqlTime) => {\r\n  var sqlDateArr1 = sqlDate.split(\"-\");\r\n  var sYear = sqlDateArr1[0];\r\n  var sMonth = (Number(sqlDateArr1[1]) - 1).toString();\r\n  var sDay = sqlDateArr1[2];\r\n  var sqlTimeArr = sqlTime.split(\":\");\r\n  return new Date(sYear,sMonth,sDay,sqlTimeArr[0],sqlTimeArr[1],sqlTimeArr[2]);\r\n}\r\n\r\n// Main component\r\n// props:\r\n// heightHandler: change the height of the upcoming event container depending on the height of the calendar\r\nconst Calendar = ({ heightHandler }) => {\r\n\r\n  const {user, setUser} = useContext(UserContext);\r\n  const {token, setToken} = useToken();\r\n  // initial information of the calendar (day of visit)\r\n  const today = startOfDay(new Date());\r\n  const initialInfo = { \r\n    'calendarStart': startOfMonth(today), \r\n    'calendarArr': takeMonth(today)\r\n  };\r\n  const [calendarInfo, setCalendarInfo] = useState(initialInfo);\r\n  const [events, setEvents] = useState([]);\r\n  const [eventForm, setEventForm] = useState({\r\n    'show': false,\r\n    'startDate': new Date(),\r\n  });\r\n  const [eventCardModal, setEventCardModal] = useState({\r\n    'toggle': false,\r\n    'events': []\r\n  });\r\n\r\n  // change the height of upcoming events according to the calendar\r\n  useEffect(() => {\r\n    heightHandler();\r\n    const getEvents = async () => {\r\n      // get the events from the datebase and store them in the state\r\n      const eventsFromServer = await fetchEvents();\r\n      setEvents(eventsFromServer);\r\n    }\r\n    getEvents();\r\n  }, [calendarInfo], [events]);\r\n  \r\n  const fetchEvents = async () => {\r\n    const res = await fetch(getaddr()+'search_events', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n  \r\n  // add fetched events to calendar\r\n  let dayRecord = {};\r\n  const stickEvents = () => {\r\n    dayRecord = {};\r\n    const eventsBars = events.map((event) => {\r\n\r\n      // Convert the datetime in sql db to js date obj\r\n      let start_date = sqlToJsDate(event.start_date, event.start_time);\r\n      let end_date = sqlToJsDate(event.end_date, event.end_time);\r\n      \r\n      // filtering the events that are not in the calendar range\r\n      if (end_date < calendarInfo.calendarArr[0].day || start_date > calendarInfo.calendarArr[calendarInfo.calendarArr.length-1].day) {\r\n        return\r\n      } \r\n      // if the startdate of the event is before the start of the calendar\r\n      // set the start date to the start of the calendar month\r\n      if (start_date < calendarInfo.calendarArr[0].day) {\r\n        start_date = calendarInfo.calendarArr[0].day;\r\n      } \r\n      // set the end day as above\r\n      if (end_date > calendarInfo.calendarArr[calendarInfo.calendarArr.length-1].day) {\r\n        end_date = calendarInfo.calendarArr[calendarInfo.calendarArr.length-1].day;\r\n      }\r\n      // get the start, end, duration and difference in calendar week of the event\r\n      let start = startOfDay(start_date);\r\n      let end = startOfDay(end_date);\r\n      let startRow = getWeekOfMonth(start) + 1;\r\n      let colNum = getDay(start) + 1;\r\n      let diffDays = differenceInDays(end, start) + 1;\r\n      let diffWeeks = differenceInCalendarWeeks(end, start);\r\n      \r\n      // set the calendar row that event should be started and ended\r\n      if (start_date < calendarInfo['calendarStart']) {\r\n        startRow = 2;\r\n      } \r\n      if (start_date > endOfMonth(calendarInfo['calendarStart'])) {\r\n        startRow = getWeekOfMonth(endOfMonth(calendarInfo['calendarStart'])) + 1\r\n      }\r\n\r\n      // calculate the col span for each row\r\n      let span;\r\n      if (diffWeeks > 0) {\r\n        span = [...Array(diffWeeks + 1)].map((_, index) => {\r\n          if (index == 0) {\r\n            diffDays -= (7 - colNum) + 1\r\n            return (7 - colNum) + 1;\r\n          } else if (index == diffWeeks) {\r\n            return diffDays;\r\n          } else {\r\n            diffDays -= 7;\r\n            return 7;\r\n          }\r\n        })\r\n      } else {\r\n        span = [diffDays]; \r\n      }\r\n      \r\n      // Display rule:\r\n      // Show at most 2 events in one calendar day\r\n      // start earlier, display first\r\n\r\n      let curPos = {\r\n        'center': true,\r\n        'end': true,\r\n      }\r\n      // check if that day has events displayed\r\n      for (let i = start; i <= end; i = addDays(i, 1)) {\r\n        if (dayRecord[i]) {\r\n          // the number of events on that day\r\n          dayRecord[i]['frequency']++;\r\n          curPos['center'] = curPos['center'] && dayRecord[i]['center']\r\n          curPos['end'] = curPos['end'] && dayRecord[i]['end']\r\n        } else {\r\n          dayRecord[i] = {\r\n            'center': true,\r\n            'end': true,\r\n            'frequency': 1,\r\n            'hide': 0,\r\n            'row': startRow + differenceInCalendarWeeks(i, start),\r\n            'column': getDay(i) + 1,\r\n            'events': []\r\n          }\r\n        }\r\n        dayRecord[i]['events'].push(event);\r\n      }\r\n\r\n      let display = 'block';\r\n      // check if the capacity of that day is full, if not, set the state of the of that position to false \r\n      if (curPos['center']) {\r\n        for (let i = start; i <= end; i = addDays(i, 1)) {\r\n          dayRecord[i]['center'] = false;\r\n        }\r\n      } else if (curPos['end']) {\r\n        for (let i = start; i <= end; i = addDays(i, 1)) {\r\n          dayRecord[i]['end'] = false;\r\n        }\r\n      } else {\r\n        // calculate the number of events should be hidden\r\n        display = 'none'\r\n        dayRecord[start]['hide']++;\r\n      }\r\n      // decide the correct position to the current events\r\n      let pos = curPos['center'] ? 'center' : (curPos['end'] ? 'end' : '');\r\n      \r\n      return (span.map((colSpan, idx) => {\r\n        // set the CSS style to the event bar\r\n          let style = {\r\n            gridColumn: `${idx == 0 ? colNum : 1} / span ${colSpan}`,\r\n            gridRow: `${startRow + idx}`,\r\n            alignSelf: `${pos}`,\r\n            display: display\r\n          }\r\n          return (\r\n            <CalendarEvent key={idx} classes={`task--${event.category === null ? \"\" : event.category.split(' ')[0]}`} styles={style} name={event.name} />\r\n          )\r\n        })\r\n      )\r\n    })\r\n    return eventsBars;\r\n  }\r\n\r\n  // stick the tag that indicating number of hidden events on that day\r\n  const stickTags = () => {\r\n    let tagsArr = [];\r\n    for (let key in dayRecord) {\r\n      if (dayRecord[key]['hide'] !== 0) {\r\n        // style obj of the tag\r\n        let style = {\r\n          gridColumn: `${dayRecord[key]['column']}`,\r\n          gridRow: `${dayRecord[key]['row']}`,\r\n          alignSelf: 'start',\r\n        }\r\n          tagsArr.push(<CalendarTag styles={style} hide={dayRecord[key]['hide']} key={key} />)\r\n      } else {\r\n      }\r\n    }\r\n    return tagsArr\r\n  }\r\n\r\n  // view the previous month\r\n  const previousMonth = () => {\r\n    let newMonth = subMonths(calendarInfo['calendarStart'], 1);\r\n    setCalendarInfo({\r\n      'calendarStart': newMonth,\r\n      'calendarArr': takeMonth(newMonth)\r\n    });\r\n  }\r\n\r\n  // view the next month\r\n  const nextMonth = () => {\r\n    let newMonth = addMonths(calendarInfo['calendarStart'], 1);\r\n    setCalendarInfo({\r\n      'calendarStart': newMonth,\r\n      'calendarArr': takeMonth(newMonth)\r\n    });\r\n  }\r\n\r\n  // double click event handler of the calendar box\r\n  // show create event form in modal pop up\r\n  const createEventForm = (date) => {\r\n    setEventForm({\r\n      'show': true,\r\n      'startDate': date\r\n    });\r\n  }\r\n\r\n  // hover event handler of the calendar box\r\n  // show the modal including all the events cards (including hidden) \r\n  const showEventCardModal = (date) => {\r\n    if (dayRecord[date]) {\r\n      setEventCardModal({ 'toggle': true, 'events': dayRecord[date]['events']});\r\n    } else setEventCardModal({ 'toggle': true, 'events': []});\r\n     \r\n  }\r\n\r\n  // initializing the event cards modal\r\n  const [eventModal, setEventModal] = useState({ 'toggle': false, 'event': {}})\r\n\r\n  // click event handler of the event card in the event cards modal\r\n  const dismissEventCardModal = (e) => {\r\n    setEventCardModal({ 'toggle': false , 'events': []})\r\n    setEventModal({ 'toggle': true, 'event': e})\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Event form component with CSS transition */}\r\n      <CSSTransition\r\n        in={eventForm['show']}\r\n        timeout={300}\r\n        classNames={\"create-event-form-\"}\r\n        unmountOnExit\r\n      >\r\n        <EventForm dismissHandler={() => setEventForm({'show': false, 'startDate': eventForm['startDate']})} startDate={eventForm['startDate']} edit={false}/>\r\n      </CSSTransition>\r\n      {/* The header of calendar */}\r\n      <div className=\"calendar-header\">\r\n        <CalendarHeader \r\n          month={monthNames[getMonth(calendarInfo['calendarStart'])]} \r\n          year={getYear(calendarInfo['calendarStart'])} \r\n          previousMonth={previousMonth}\r\n          nextMonth={nextMonth}\r\n        />\r\n      </div>\r\n      {/* Main part of the calendar */}\r\n      <div className=\"calendar\">\r\n        {dayNames.map((day, index) => (<span className=\"day-name\" key={index} style={day === \"Sun\" ? {color: \"rgb(217, 83, 79)\"} : {}}>{day}</span>))}\r\n        {calendarInfo['calendarArr'].map((item, index) => {\r\n          // console.log(item)\r\n          return (<CalendarItems \r\n            disabled={item.disabled} \r\n            name={(item.day)} \r\n            today={item.today} \r\n            sunday={item.sunday} \r\n            key={index} \r\n            doubleClickHandler={user.type==1?createEventForm:()=>{}}            \r\n            clickHandler={showEventCardModal}\r\n            />)\r\n        })}\r\n        {/* Components of the events bars and the tags */}\r\n        {stickEvents()}\r\n        {stickTags()}\r\n      </div>\r\n      {/* The color label and the guide of calendar */}\r\n      <div className=\"flex-center\" style={{justifyContent: 'space-between', fontSize: '.8em'}}>\r\n          {['Sport', 'Music', 'Academic', 'Health', 'Festival', 'Career-related', 'Whole-person development', 'Others'].map((item, index) => (\r\n                    <div className=\"calendar-labels\">\r\n                      <span className={`task--${item} dot`}></span> {item}\r\n                    </div>\r\n            ))}     \r\n          <div classNames=\"calendar-tips\">*<b>Hover</b> to check events of the day. <b>Double Click</b>  to create public event (Only for organizer).</div>\r\n      </div>\r\n      {/* bootstrap modal component for the event card modal */}\r\n      <Modal\r\n        show={eventCardModal['toggle']}\r\n        onHide={() => setEventCardModal({ 'toggle': false , 'events': []})}\r\n        dialogClassName=\"calendar-event-modal\"\r\n      >\r\n        <Modal.Header closeButton className=\"calendar-event-modal-title\">More Events...</Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"calendar-event-list-modal-container\">\r\n            {eventCardModal['events'].length != 0 ? eventCardModal['events'].map((ev, index) => {\r\n              return <EventCard event={ev} key={index} onClick={() => dismissEventCardModal(ev)} />\r\n            }) : <h1>There is no more events on this day</h1>}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Event modal conataining the details of a events */}\r\n      <EventModal showEvent={eventModal} setShow={setEventModal}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n// component of the header of calendar\r\nconst CalendarHeader = ({ month, year, previousMonth, nextMonth }) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"flex-center\">\r\n        <CalendarButton classes=\"calendar-button-left\" clickHandler={previousMonth} />\r\n        <span style={{width: '100px', textAlign: 'center'}}>{month}</span>\r\n        <CalendarButton classes=\"calendar-button-right\" clickHandler={nextMonth} />\r\n      </h1>\r\n      <p>{year}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n// component of each day box of the calendar \r\nconst CalendarItems = (props) => {\r\n\r\n  const mouseOverHandler = (event) => {\r\n    var delay = setTimeout(() => {\r\n      props.clickHandler(props.name)\r\n    }, 1000)\r\n    event.target.addEventListener('mouseleave', () => {clearTimeout(delay)})\r\n  }\r\n\r\n  return (\r\n    <div className={`day ${props.disabled ? 'day--disabled' : ''}`} style={props.sunday ? {color: `rgba(217, 83, 79, ${props.disabled ? 0.6 : 1})`} : {}} onDoubleClick={() => props.doubleClickHandler(props.name)} onMouseOver={mouseOverHandler}>\r\n      <span className={props.today ? \"calendar--today\" : \"\"}>{getDate(props.name)}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Event bars\r\nconst CalendarEvent = ({ classes, name, styles }) => {\r\n  return (\r\n    <section className={`task ${classes}`} style={styles}>{name}</section>\r\n  )\r\n}\r\n\r\n// Tags in the day box\r\nconst CalendarTag = ({ styles, hide }) => {\r\n  return (\r\n    <section className='tag' style={styles}>{`${hide} more`}</section>\r\n  )\r\n}\r\n\r\nexport default Calendar","// upcoming events component showing the events started after the today (current day)\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/components/UpcomingEvents.css';\r\nimport Events from './Event/Events'\r\nimport getaddr from '../components/getaddr'\r\n\r\n// Main component\r\n// props:\r\n// height: the height depending on the height of the calendar \r\nconst UpcomingEvents = ({ height }) => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  // sqlToJsDate convert the date from format in sql db (YYYY-MM-DD) to js Date obj\r\n  const sqlToJsDate = (sqlDate, sqlTime) => {\r\n\r\n    var sqlDateArr1 = sqlDate.split(\"-\");\r\n    var sYear = sqlDateArr1[0];\r\n    var sMonth = (Number(sqlDateArr1[1]) - 1).toString();\r\n    var sDay = sqlDateArr1[2];\r\n  \r\n    var sqlTimeArr = sqlTime.split(\":\");\r\n\r\n    return new Date(sYear, sMonth, sDay, sqlTimeArr[0], sqlTimeArr[1], sqlTimeArr[2]);\r\n  }\r\n\r\n  // get the events form the server and filtering the events that suitable\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const eventsFromServer = await fetchEvents()\r\n      const upcomingEvents = eventsFromServer.filter(upcomingEvent => {\r\n        if (sqlToJsDate(upcomingEvent.start_date, upcomingEvent.start_time) >= new Date()) {\r\n          return upcomingEvent\r\n        }\r\n      })\r\n      setEvents(upcomingEvents)\r\n    }\r\n    getEvents()\r\n  }, [])\r\n\r\n  const fetchEvents = async () => {\r\n    const res = await fetch(getaddr() + 'search_events', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <div className=\"upcoming-events\" style={{width:\"100%\", maxHeight: `${height}px`}}>\r\n      {/* rendering event cards */}\r\n      <Events  height={height} events={events} title=\"Upcoming\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpcomingEvents","// Footer component used in every Pages\r\nimport { Github } from 'react-bootstrap-icons'\r\nimport '../styles/components/Footer.css';\r\n\r\n// Main component\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h1>C a l E v e n t</h1>\r\n      <p>Copyright &copy; All right reserved by CSCI 3100 Group E1 2021 </p>\r\n      <a href=\"https://github.com/dannysze/CSCI3100-Project\" target=\"_blank\">\r\n        <Github />\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","// Home Page component\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Header from '../components/Header';\r\nimport Navbar from '../components/Navbar';\r\nimport Calendar from '../components/Calendars/Calendar';\r\nimport UpcomingEvents from '../components/UpcomingEvents';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/pages/Home.css';\r\n\r\n// Main component\r\nconst Home = () => {\r\n\r\n  const [height, setHeight] = useState(796);\r\n  \r\n  // setting the document title\r\n  useEffect(() => {\r\n    document.title = 'Home Page';\r\n  })\r\n  \r\n  // Height controller that maintain the same height of the calendar and the upcoming evetns container\r\n  const heightHandler = () => {\r\n    const viewHeight = document.getElementsByClassName('calendar-container')[0].clientHeight;\r\n    setHeight(viewHeight);\r\n  }\r\n\r\n  // basic layout of the mainpage\r\n  return (\r\n    <Container className=\"home\" fluid>\r\n      <Header />\r\n      <Navbar />\r\n      <Row className=\"main-content\">\r\n        <Col md={9}>\r\n          <Calendar heightHandler={heightHandler}/>\r\n        </Col>\r\n        <Col md={3}>\r\n          <UpcomingEvents height={height}/>\r\n        </Col>\r\n      </Row>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home","// Login page component\r\nimport React, { useEffect, useState } from 'react';\r\nimport { LoginButton, SignUpButton, CloseButton } from '../components/CustomButton';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport getaddr from '../components/getaddr'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/pages/Login.css';\r\nimport useToken from '../useToken'\r\n\r\n// Main component\r\nconst Login = () => {\r\n  const {token, setToken} = useToken();\r\n\r\n  // change the doc title depending on the current page\r\n  useEffect(() => {\r\n    document.title = showSignUp ? 'Login' : 'Sign Up';\r\n  })\r\n\r\n  // used for simple validation check (format)\r\n  var checkValid = {\r\n    'username': true,\r\n    'password': true,\r\n    'password_double': true,\r\n    'email': true,\r\n  }\r\n\r\n  // error messgae shown under the fields which failed the validation check\r\n  var defaultResult = {\r\n    'errorMsg':'',\r\n    'alert':false,\r\n  }\r\n\r\n  // initialize form value\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [userType, setUserType] = useState('');\r\n  const [showSignUp, setShowSignUp] = useState(true);\r\n  const [valid, setValid] = useState(checkValid);\r\n  const [resetPassword, setResetPassword] = useState(false);\r\n  const [loginResult, setLoginResult] = useState(defaultResult);\r\n  const [signupResult, setSignupResult] = useState(defaultResult);\r\n  const [resetResult, setResetResult] = useState(defaultResult);\r\n\r\n  // login form change handler\r\n  const loginChangeHandler = (event) => {\r\n    event.target.name === 'username' ? setUsername(event.target.value) : setPassword(event.target.value);\r\n    setLoginResult(defaultResult);\r\n  }\r\n\r\n\r\n  const signUpChangeHandler = (event) => {\r\n    setSignupResult(defaultResult);\r\n    if (event.target.name === 'username_register') {\r\n      setUsername(event.target.value);\r\n    } else if (event.target.name === 'password_register') {\r\n      setPassword(event.target.value);\r\n      password === event.target.value ? setValid({ ...checkValid, 'password_double': true }) : setValid({ ...checkValid, 'password_double': false })\r\n    } else if (event.target.name === 'password_register_check') {\r\n      // double check the password\r\n      password === event.target.value ? setValid({ ...checkValid, 'password_double': true }) : setValid({ ...checkValid, 'password_double': false })\r\n    } else if (event.target.name === 'email_register') {\r\n      // email checking needed\r\n      let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      regEmail.test(email) ? setValid({ ...checkValid, 'email': true }) : setValid({ ...checkValid, 'email': false })\r\n      setEmail(event.target.value);\r\n    } else if (event.target.name === 'type') {\r\n      setUserType(event.target.value);\r\n    }\r\n  }\r\n\r\n  // click handler for the reset button on the sign up page (erase the whole form)\r\n  const resetChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setResetResult(defaultResult);\r\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      regEmail.test(email) ? setValid({ ...checkValid, 'email': true }) : setValid({ ...checkValid, 'email': false })\r\n      setEmail(event.target.value);\r\n  }\r\n\r\n  // click event for transit to the reset password form and clear the sign in and sign up form\r\n  const resetPasswordHandler = (event) => {\r\n    event.preventDefault();\r\n    clearForm();\r\n    setResetPassword(!resetPassword);\r\n  }\r\n\r\n  // Login submit handler\r\n  const login = async (event) => {\r\n    event.preventDefault();\r\n    if(!username||!password){\r\n      setLoginResult({'errorMsg':'Neither username nor password should be left empty', 'alert':true});\r\n      return;\r\n    }\r\n    try{\r\n      //change getaddr() to getaddr(isLocal=false) to make it use remote address\r\n      let res = await fetch(getaddr()+'login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({username:username, password:password}),\r\n      });\r\n      let body = await res.json();\r\n      if (!res.ok){\r\n            setLoginResult({'errorMsg':body['error'], 'alert':true});\r\n      }else{\r\n        //temporily use user_id as token\r\n        setToken({'token':body['token']});\r\n        window.location.replace(\"/\");\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // sign up submit handler\r\n  const signup = async (event) => {\r\n    event.preventDefault();\r\n    if(!username||!password||!email){\r\n      setSignupResult({'errorMsg':'No fields should be left empty', 'alert':true});\r\n      return;\r\n    }\r\n    if(!userType){\r\n      setSignupResult({'errorMsg':'Please select user type', 'alert':true});\r\n      return;\r\n    }\r\n    if(!valid.username||!valid.password||!valid.email){\r\n      return;\r\n    }\r\n    try{\r\n      let res = await fetch(getaddr()+'signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({username:username, password:password,email:email,type:(userType=='user'?0:1)}),\r\n      });\r\n      let body = await res.json();\r\n      if (!res.ok){\r\n            setSignupResult({'errorMsg':body['error'], 'alert':true});\r\n      }else{\r\n        setToken({'token':body['token']});\r\n        window.location.replace(\"/\");\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // reset password submit handler\r\n  const resetpassword = async event => {\r\n    event.preventDefault();\r\n    if(!email){\r\n      setResetResult({'errorMsg':'Email should not be left empty', 'alert':true});\r\n      return;\r\n    }\r\n    if(!valid.email){\r\n      return;\r\n    }\r\n    try{\r\n      let res = await fetch(getaddr()+'reset_password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({email:email}),\r\n      });\r\n      let body = await res.json();\r\n      if (!res.ok){\r\n            setResetResult({'errorMsg':body['error'], 'alert':true});\r\n      }else{\r\n        setResetResult({'errorMsg':'Password reset link has been sent to your mailbox. Reset your password there.', 'alert':true});\r\n      }\r\n\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const forms = document.getElementsByTagName('form'); \r\n  // clear all input in the form and state\r\n  const clearForm = () => {\r\n    setUsername('');\r\n    setPassword('');\r\n    for (let i = 0; i < forms.length; i++) {\r\n      forms[i].reset();\r\n    }\r\n    setUsername('');\r\n    setPassword('');\r\n    setEmail('');\r\n    setUserType('');\r\n    setValid(checkValid);\r\n  }\r\n  \r\n  // sign up form input fields\r\n  const signUpFields = [{ \r\n    'name': 'username_register',\r\n    'placeholder': 'Username',\r\n    'type': 'text',\r\n    'errorMsg': 'The username has been used',\r\n    'alert': valid.username\r\n  }, { \r\n    'name': 'email_register',\r\n    'placeholder': 'Email Address',\r\n    'type': 'text',\r\n    'errorMsg': 'Not valid email address',\r\n    'alert': valid.email\r\n  }, {\r\n    'name': 'password_register',\r\n    'placeholder': 'Password',\r\n    'type': 'password',\r\n    'errorMsg': '&nbsp;',\r\n    'alert': valid.password\r\n  }, {\r\n    'name': 'password_register_check',\r\n    'placeholder': 'Enter Password Again',\r\n    'type': 'password',\r\n    'errorMsg': 'Password is not matched',\r\n    'alert': valid.password_double\r\n  }]\r\n  \r\n  // sign in form input fields\r\n  const signInFields = [{\r\n    'name': 'username',\r\n    'placeholder': 'Username',\r\n    'type': 'text',\r\n  }, {\r\n    'name': 'password',\r\n    'placeholder': 'Password',\r\n    'type': 'password',\r\n  }]\r\n  \r\n  // page gradient overlay transition state\r\n  const move = () => {\r\n    clearForm();\r\n    setResetPassword(false);\r\n    setShowSignUp(!showSignUp);\r\n    setLoginResult(defaultResult);\r\n    setSignupResult(defaultResult);\r\n    setResetResult(defaultResult);\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      timeout={300}\r\n      classNames=\"login-page\"\r\n      unmountOnExit\r\n    >\r\n      <div className=\"login flex-center\">\r\n        <div className=\"login-form-container\">\r\n          {/* Gradient overlay with css transition */}\r\n          <CSSTransition\r\n            in={!showSignUp}\r\n            timeout={700}\r\n            classNames=\"login-overlay\"\r\n            unmountOnExit={false}\r\n          >\r\n            <div className=\"login-overlay flex-center\">\r\n              <div className=\"login-show flex-center\">\r\n                <h1>Join Us!</h1>\r\n                <h6>\r\n                  CalEvents can help you manage your schedules well!\r\n                </h6>\r\n                <SignUpButton type=\"\" onClick={move} content='Sign Up' />\r\n              </div>\r\n              <div className='signup-show flex-center'>\r\n                <h1>Already have an account?</h1>\r\n                <h6>\r\n                  {/* CalEvents can help you manage your schedules well! */}\r\n                </h6>\r\n                <SignUpButton type=\"\" onClick={move} content='Sign in' />\r\n              </div>\r\n            </div>\r\n          </CSSTransition>\r\n          {/* SIgn up form */}\r\n          <div className=\"signup-form\">\r\n            <h2>Sign Up</h2>\r\n            <form action=\"auth\" nethod=\"POST\">\r\n              {signUpFields.map((item, index) => (\r\n                <>\r\n                  <input type={item.type} name={item.name} placeholder={item.placeholder} onChange={signUpChangeHandler} key={index} required/>\r\n                  {<div className=\"alert-box\" style={item.alert ? {visibility: 'hidden'} : {visibility: 'visible'}}>{item.errorMsg}</div>}\r\n                </>\r\n                ))}\r\n              {<div className=\"alert-box\" style={signupResult.alert ? {visibility: 'visible'} : {visibility: 'hidden'}}>{signupResult.errorMsg}</div>}\r\n              <div className=\"note\">Note<span style={{color: 'red'}}> * </span>: Users cannot create public events. Organisers cannot join events</div>\r\n              <div className=\"radio-group\">\r\n                <label className=\"radio-container\">\r\n                  <input type=\"radio\" name=\"type\" value=\"user\" onChange={signUpChangeHandler}/>User\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label className=\"radio-container\">\r\n                  <input type=\"radio\" name=\"type\" value=\"organiser\" onChange={signUpChangeHandler}/>Organiser\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div><br />\r\n              <LoginButton type=\"submit\" onClick={signup} content='Sign up' />\r\n            </form>\r\n          </div>\r\n          {/* sign in form with css transition */}\r\n          <CSSTransition\r\n            in={!resetPassword}\r\n            timeout={350}\r\n            classNames=\"reset-login-form\"\r\n          >\r\n            <div className=\"login-form\">\r\n              <h2>Login!</h2>\r\n              <h1 style={{padding: '20px 0'}}>CalEvents</h1>\r\n              <form action=\"auth\" method=\"POST\">\r\n                {signInFields.map((item, index) => (<input type={item.type} name={item.name} placeholder={item.placeholder} onChange={loginChangeHandler} key={index} required/>))}\r\n                {<div className=\"alert-box\" style={loginResult.alert ? {visibility: 'visible'} : {visibility: 'hidden'}}>{loginResult.errorMsg}</div>}\r\n                <br /><br />\r\n                <a onClick={resetPasswordHandler} className=\"reset-password\">Forget Password?</a><br /><br />\r\n                <LoginButton type=\"submit\" onClick={login} content='Sign In' />\r\n              </form>\r\n            </div>\r\n          </CSSTransition>\r\n          {/* password reset form with css transition */}\r\n          <CSSTransition\r\n            in={resetPassword}\r\n            timeout={800}\r\n            classNames=\"reset-form\"\r\n          >\r\n            <div className=\"reset-form\">\r\n              <CloseButton onClick={resetPasswordHandler} style={{marginLeft: '10%', marginTop: '-20%'}}/>\r\n              <h2>Reset Password</h2>\r\n              <form action=\"auth\" method=\"POST\">\r\n                <input type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={resetChangeHandler}/>\r\n                {<div className=\"alert-box\" style={!valid.email ? {visibility: 'visible'} : {visibility: 'hidden'}}>Not valid email address</div>}\r\n                {<div className=\"alert-box\" style={resetResult.alert ? {visibility: 'visible'} : {visibility: 'hidden'}}>{resetResult.errorMsg}</div>}\r\n                <br /><br />\r\n                <LoginButton type=\"submit\" onClick={resetpassword} content='Reset password' />\r\n              </form>\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","// Private Schedule component in My Page\r\n// showing only the events craeted by users or joined events\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { CalendarButton } from '../CustomButton';\r\nimport EventForm from '../Event/EventForm';\r\nimport { getDate, getDay, getMonth, startOfWeek, endOfWeek, startOfDay, addDays, differenceInCalendarDays, addWeeks, subWeeks, addMinutes, getMinutes, getHours, differenceInMinutes } from 'date-fns';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport useToken from '../../useToken';\r\nimport getaddr from '../getaddr';\r\nimport { UserContext } from '../../UserContext';\r\nimport '../../styles/components/Calendars/Schedule.css';\r\n\r\n// constant names used for the schedule\r\nconst dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthNames = ['January', 'Feburay', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nconst box = [...Array(48).keys()];\r\n\r\n// getting the days in the specified week\r\n// params: the start date of the week (default: today)\r\nconst takeWeek = (date = new Date()) => {\r\n  let days = [];\r\n  let start = startOfWeek(startOfDay(date));\r\n  let end = endOfWeek(startOfDay(date));\r\n\r\n  let scheduleObj = {};\r\n  let day = start;\r\n  while (day < end) {\r\n    // obj in each day\r\n    scheduleObj = {\r\n      'day': day,\r\n      'disabled': false,\r\n      'today': false,\r\n      'sunday': false,\r\n      'frequency': 0\r\n    };\r\n    // disabling the days before today\r\n    if (day < startOfDay(new Date())) {\r\n      scheduleObj.disabled = true;\r\n    }\r\n    // coloring sunday to red\r\n    if (getDay(day) === 0) {\r\n      scheduleObj.sunday = true;\r\n    }\r\n    // styling today's col\r\n    if (differenceInCalendarDays(day, new Date()) == 0) {\r\n      scheduleObj.today = true;\r\n    }\r\n    days.push(scheduleObj);\r\n    day = addDays(day, 1);\r\n  }\r\n  return days;\r\n}\r\n\r\n// sqlToJsDate convert the date from format in sql db (YYYY-MM-DD) to js Date obj\r\nconst sqlToJsDate = (sqlDate, sqlTime) => {\r\n\r\n  var sqlDateArr1 = sqlDate.split(\"-\");\r\n  var sYear = sqlDateArr1[0];\r\n  var sMonth = (Number(sqlDateArr1[1]) - 1).toString();\r\n  var sDay = sqlDateArr1[2];\r\n\r\n  var sqlTimeArr = sqlTime.split(\":\");\r\n   \r\n  return new Date(sYear,sMonth,sDay,sqlTimeArr[0],sqlTimeArr[1],sqlTimeArr[2]);\r\n}\r\n\r\n// Main component\r\nconst Schedule = () => {\r\n  // Initializing the states\r\n  const today = startOfDay(new Date());\r\n  const initialInfo = {\r\n    'weekStart': startOfWeek(today),\r\n    'scheduleArr': takeWeek(today)\r\n  }\r\n  const [scheduleInfo, setScheduleInfo] = useState(initialInfo);\r\n  const [eventForm, setEventForm] = useState({\r\n    'show': false,\r\n    'startDateTime': new Date(),\r\n  });\r\n\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const {token} = useToken();\r\n  const {user, setUser} = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // getUser();\r\n    const getEvents = async () => {\r\n      const eventsFromServer = await fetchEvents();\r\n      // console.log(eventsFromServer);\r\n      setEvents(eventsFromServer);\r\n    }\r\n    // console.log(user)\r\n    getEvents();\r\n  }, [scheduleInfo, user]);\r\n\r\n  const fetchEvents = async () => {\r\n    const res = await fetch(getaddr()+'joined_events/'+user.user_id, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  let eventRecord = {};\r\n  // stick the events on the displayed week\r\n  const stickScheduleEvents = () => {\r\n    eventRecord = {};\r\n    \r\n    // filtering the events that only between the displayed week\r\n    const thisWeekEvents = events.filter(thisWeekEvent => {\r\n\r\n      let start_date = sqlToJsDate(thisWeekEvent.start_date, thisWeekEvent.start_time);\r\n      let end_date = sqlToJsDate(thisWeekEvent.end_date, thisWeekEvent.end_time);\r\n\r\n      if (differenceInCalendarDays(end_date, start_date) > 0) {\r\n      } else if (start_date > scheduleInfo.scheduleArr[scheduleInfo.scheduleArr.length - 1].day || end_date < scheduleInfo['weekStart']) {\r\n      } else return thisWeekEvent;\r\n    })\r\n\r\n    // positioning the events to the corresponding positions\r\n    const scheduleEventBlocks = thisWeekEvents.map((scheduleEvent, index) => {\r\n      \r\n      let start_date = sqlToJsDate(scheduleEvent.start_date, scheduleEvent.start_time);\r\n      let end_date = sqlToJsDate(scheduleEvent.end_date, scheduleEvent.end_time);\r\n\r\n      // get the details of the events\r\n      let colNum = getDay(start_date) + 2;\r\n      let minutesDiff = differenceInMinutes(end_date, start_date)\r\n      let startMinute = getMinutes(start_date);\r\n      let startHour = getHours(start_date)\r\n      let endMinute = getMinutes(end_date);\r\n      let endHour = getHours(end_date);\r\n\r\n      // finding the correct row to be displayed\r\n      let rowStart;\r\n      if (startMinute <= 30 && startMinute > 0) {\r\n        rowStart = startHour * 2 + 2;\r\n      } else if (startMinute == 0) {\r\n        rowStart = startHour * 2 + 1; \r\n      } else {\r\n        rowStart = startMinute * 2 + 2;\r\n      }\r\n      // calculate the correct row span basic on the duration of events\r\n      let rowSpan;\r\n      rowSpan = Math.floor(minutesDiff / 30);\r\n      // no rounding in each box\r\n      // let extrapx = minutesDiff % 30;\r\n      \r\n      // return the styled component\r\n      let style = {\r\n        gridColumn: `${colNum}`,\r\n        gridRow: `${rowStart} / span ${rowSpan}`,\r\n      }\r\n      return (\r\n        <section className={`block--events task task--${scheduleEvent.category.split(' ')[0]}`} style={style}>\r\n          <div className=\"block--events-title\">{scheduleEvent.name}</div>\r\n          <div className=\"\">{`${startHour}:${('0'+startMinute).slice(-2)} - ${endHour}:${('0'+endMinute).slice(-2)}`}</div>\r\n        </section>\r\n      )\r\n    })\r\n    return scheduleEventBlocks;\r\n  }\r\n\r\n  // stick the all day event bar\r\n  const stickAllDayEvent = () => {\r\n    // copy the schedule array of the schedule \r\n    const allDayEventRecord = scheduleInfo.scheduleArr.slice(0, 7).map((item, index) => {\r\n      item.frequency = 0;\r\n      return item;\r\n    })\r\n\r\n    // positioning the events to the corresponding positions\r\n    const allDayEventBar = events.map((allDayEvent, index) => {\r\n      \r\n      let start = startOfDay(sqlToJsDate(allDayEvent.start_date, allDayEvent.start_time));\r\n      let end = startOfDay(sqlToJsDate(allDayEvent.end_date, allDayEvent.end_time));\r\n      // filter events that start and end in the same day\r\n      if (differenceInCalendarDays(end, start) === 0) {\r\n        return\r\n      } \r\n      // filtler events that not in the correct range \r\n      if (end < scheduleInfo['weekStart'] || start > scheduleInfo.scheduleArr[scheduleInfo.scheduleArr.length - 1].day) {\r\n        return \r\n      }\r\n\r\n      // trim the start and end date\r\n      if (start < scheduleInfo['weekStart']) {\r\n        start = scheduleInfo['weekStart']\r\n      }\r\n      if (end > scheduleInfo.scheduleArr[scheduleInfo.scheduleArr.length - 1].day) {\r\n        end = scheduleInfo.scheduleArr[scheduleInfo.scheduleArr.length - 1].day\r\n      }\r\n      \r\n      // calculating the correct col span and row number\r\n      let colNum = getDay(start) + 1;\r\n      let colSpan = differenceInCalendarDays(end, start) + 1;\r\n      \r\n      let max = 1;\r\n      let rangeStart = false;\r\n      for (let i = 0; i < allDayEventRecord.length; i++) {\r\n        if (rangeStart) {\r\n          allDayEventRecord[i].frequency++;\r\n          max = Math.max(max, allDayEventRecord[i].frequency);\r\n          if (differenceInCalendarDays(allDayEventRecord[i].day, end) === 0) {\r\n            // rangeStart = false;\r\n            break;\r\n          }\r\n        }\r\n        if (differenceInCalendarDays(allDayEventRecord[i].day, start) === 0) {\r\n          rangeStart = true;\r\n          allDayEventRecord[i].frequency++;\r\n          max = allDayEventRecord[i].frequency;\r\n        }\r\n      }\r\n      let row = max;\r\n      let style = {\r\n        gridColumn: `${colNum} / span ${colSpan}`,\r\n        gridRow: `${row}`,\r\n      }\r\n      return (\r\n        <section className={`task task--${allDayEvent.category.split(' ')[0]} all-day-events--bar`} style={style}>{allDayEvent.name}</section>\r\n      )\r\n    })\r\n    return allDayEventBar;\r\n  }\r\n\r\n  // view the previous month\r\n  const previousWeek = () => {\r\n    let newWeek = subWeeks(scheduleInfo['weekStart'], 1);\r\n    // console.log(newWeek);\r\n    setScheduleInfo({\r\n      'weekStart': newWeek,\r\n      'scheduleArr': takeWeek(newWeek)\r\n    });\r\n    // console.log(scheduleInfo);\r\n  }\r\n\r\n  // view the next week\r\n  const nextWeek = () => {\r\n    let newWeek = addWeeks(scheduleInfo['weekStart'], 1);\r\n    setScheduleInfo({\r\n      'weekStart': newWeek,\r\n      'scheduleArr': takeWeek(newWeek)\r\n    });\r\n  }\r\n\r\n  // view the current week\r\n  const currentWeek = () => {\r\n    setScheduleInfo(initialInfo)\r\n  }\r\n\r\n  const createEventForm = (dateTime) => {\r\n    setEventForm({\r\n      'show': true,\r\n      'startDateTime': dateTime\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      {/* Event form for creating private events */}\r\n      <CSSTransition\r\n        in={eventForm['show']}\r\n        timeout={300}\r\n        classNames={\"create-event-form-\"}\r\n        unmountOnExit\r\n      >\r\n        <EventForm dismissHandler={() => setEventForm({'show': false, 'startDateTime': eventForm['startDateTime']})} startDate={eventForm['startDateTime']}/>\r\n      </CSSTransition>\r\n      <div className=\"schedule-header\">\r\n        {/* 3 buttons for viewing scheudle */}\r\n        <div className=\"timeslots timeslots-button\">\r\n          <span id=\"schedule--month\">{monthNames[getMonth(scheduleInfo.weekStart)]}</span>\r\n          <CalendarButton classes=\"calendar-button-left\" clickHandler={previousWeek}/>\r\n          <CalendarButton classes=\"calendar-button-reset\" clickHandler={currentWeek}/>\r\n          <CalendarButton classes=\"calendar-button-right\" clickHandler={nextWeek}/>\r\n        </div>\r\n        \r\n        {scheduleInfo.scheduleArr.map((day, index) => {\r\n          let style = {\r\n            gridColumn: `${index + 2}`,\r\n            color: `${day.sunday ? `rgba(217, 83, 79, ${day.disabled ? 0.6 : 1})` : day.disabled ? `rgba(152, 160, 166, 0.6)` : '#282828' }`,\r\n            fontWeight: `${day.today ? '600' : '400'}`,\r\n          }\r\n          return (\r\n            <span className={`schedule-day-name`} style={style} key={index}><span className=\"schedule-header--number\">{getDate(day.day)}</span>&nbsp;&nbsp;{dayNames[index]}</span>\r\n          )\r\n        })}\r\n      </div>\r\n      {/* All day events container */}\r\n      <div className=\"schedule-week\">\r\n        <div className=\"timeslots all-day-events--title\">All-day</div>\r\n        <div className=\"all-day-events--grid\">\r\n          {scheduleInfo.scheduleArr.map((day, index) => (<div className={`all-day-events--slots ${day.today? 'block--today' : ''}`} key={index}></div>))}\r\n          {stickAllDayEvent()}\r\n        </div>\r\n      </div>\r\n      {/* Daily events container */}\r\n      <div className=\"schedule-body\">\r\n        {/* setting the time label */}\r\n        {box.map((item, index) => (index % 2 == 0 && index != 0 ? <div className=\"timeslots\" key={index}>{`${item / 2 % 12 == 0 ? 12 : item / 2 % 12} ${item/2 < 12 ? 'am' : 'pm'}`}</div> : <div className=\"timeslots\" key={index}></div>))}\r\n        {/* creating the schedule slots */}\r\n        {scheduleInfo.scheduleArr.map((day, col) => {\r\n          return box.map((_, row) => {\r\n            let style = {\r\n              gridRow: row+1,\r\n              gridColumn: col+2,\r\n            }\r\n            return (\r\n              <div style={style} className={`block ${day.today ? 'block--today' : ''}`} key={col * row + row} onClick={() => createEventForm(addMinutes(day.day, 30 * (row)))}>&nbsp;</div>\r\n            )\r\n          })\r\n        })}\r\n        {/* stick the events blocks */}\r\n        {stickScheduleEvents()}\r\n      </div>\r\n      {/* schedule guides */}\r\n      <div style={{textAlign:'right', fontWeight: \"350\", fontStyle:\"oblique\"}}>*<b>Click</b> to create event (Private for normal user/Public for organizer).</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedule","//This is a js file that create the record card,  which is a component in MyCalendar page to show the event that the user join\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { CaretDownFill, } from 'react-bootstrap-icons';\r\nimport { FormButton } from '../CustomButton';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport EventForm from './EventForm';\r\nimport PropTypes from 'prop-types'\r\nimport getaddr from '../getaddr'\r\nimport useToken from '../../useToken'\r\nimport { UserContext } from '../../UserContext'\r\nimport \"../../styles/components/Event/Event_record.css\"\r\n\r\n\r\nconst Eventrecord = ({ event, onClick, index }) => {\r\n\r\n    const [showDetail, toggleShowDetail] = useState(false);\r\n    const [height, setHeight] = useState('');\r\n    const [deleted, setDeleted] = useState(false);\r\n    useEffect(() => {\r\n        console.log(user.type);\r\n        console.log(event.visible);\r\n        setHeight(document.getElementsByClassName('record-info')[index].scrollHeight)\r\n    }, [])\r\n\r\n    const [editForm, setEditForm] = useState({\r\n        show: false, \r\n        start_date: event.start_date,\r\n        end_date: event.end_date,\r\n    });\r\n    \r\n    // event info that could be passed to edit event form which reduce the time of user input\r\n    const formInfo = {\r\n        show: true,\r\n        // event.start_date: event.start_date,\r\n        start_time: event.start_time,\r\n        start_date: event.start_date, \r\n        end_time: event.end_time,\r\n        end_date: event.end_date,\r\n        event_name: event.name,\r\n        event_id: event.event_id,\r\n        venue: event.venue,\r\n        capacity: event.capacity,\r\n        ticket: event.ticket,\r\n        description: event.description, \r\n    }\r\n    const showRecordDetail = () => {\r\n        toggleShowDetail(!showDetail);\r\n    }\r\n\r\n    const { token } = useToken();\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    // DELETE events API \r\n    const deleteEvent = async () => {\r\n        let r = window.confirm(\"Are you sure to delete this event?\");\r\n        if (r==false) return;\r\n        let res = await fetch(getaddr()+'user_events/'+event.event_id,  {\r\n            method: 'Delete',\r\n            headers: {\r\n                'auth': token,\r\n            },\r\n        });\r\n        let result = await res.json();\r\n        if(!res.ok)alert(result['error']);\r\n        else alert(result['success']);\r\n        window.location.reload();\r\n    }\r\n\r\n    // Edit event API\r\n    const editEvent = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    // User request for refunding\r\n    const userRefund = async (e) => {\r\n        e.preventDefault()\r\n        let r = window.confirm(\"You sure you want to quit?\");\r\n        if (r==false) return;\r\n        console.log(user.user_id);\r\n        let res = await fetch(`${getaddr()}refund/${event.event_id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'auth': token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({user_id:user.user_id}),\r\n        });\r\n        let result = await res.json();\r\n        if(!res.ok)alert(result['error']);\r\n        else alert(result['success']);\r\n\r\n    }\r\n\r\n    // show the edit event form\r\n    const toggleEditForm = (event) => {\r\n        setEditForm(formInfo);\r\n    }\r\n    //the code below is the component to show the information of events that the user join\r\n    return (\r\n        <li className='record-container'>\r\n            <CSSTransition\r\n                in={editForm.show}\r\n                timeout={300}\r\n                classNames={\"create-event-form-\"}\r\n                unmountOnExit\r\n            >   \r\n                <EventForm dismissHandler={() => setEditForm({show: false, start_date: editForm.start_date})} startDate={editForm.start_date} edit={true} editInfo={editForm}/>\r\n                {/* <EventForm dismissHandler={() => setEditForm({'show': false, 'start_date': editForm['start_date']})} startDate={editForm['start_date']} edit={true} editInfo={editForm} editHandler={editEvent}/> */}\r\n            </CSSTransition>\r\n            {/* shows the titlw of the joined event */}\r\n            <div className='record-title' onClick={showRecordDetail}><span className='record' style={showDetail ? { whiteSpace: 'normal' } : {}}>{event.name}</span><span style={showDetail ? { transform: 'rotate(180deg)' } : { transform: 'rotate(0deg)' }} className=\"record-title-icon\"><CaretDownFill /></span></div>\r\n            {/* shows the other  informations of the joined event */}\r\n            <div className='record-info' style={showDetail ? { height: `${height}px`, marginTop: '10px' } : { height: '0px' }}>\r\n                <div className=\"organizer\"><em>Organizer:</em>&nbsp;{event.organizer}</div>\r\n                <div className=\"venue\"><em>Venue:</em>&nbsp;{event.venue}</div>\r\n                <div className=\"date\">\r\n                    {event.start_date === event.end_date ? `${event.start_date}` : `${event.start_date}` + \" to \" + `${event.end_date}`}\r\n                    <span className=\"time\">{event.start_time.substring(0, 5)} - {event.end_time.substring(0, 5)}</span>\r\n                </div>\r\n                <hr style={{ margin: '.5em' }} />\r\n                <div className=\"re-description-head\">Description:</div>\r\n                <div className=\"description\">{!event.description?'No description':event.description}</div>\r\n                {/* the buttons for delete(cancel) the joined event, and edit the joined event */}\r\n                <div className=\"record-button-group\">\r\n                    {(event.organizer_id!=user.user_id) ? <FormButton classes=\"record-button\" clickHandler={userRefund} content={event.ticket!=0?\"Refund\":\"Quit\"} disabled={true} /> \r\n                    :<>\r\n                    <FormButton classes=\"record-button\" clickHandler={deleteEvent} content=\"delete\" />\r\n                    <FormButton classes=\"record-button\" clickHandler={toggleEditForm} content=\"edit\" />\r\n                    </> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Eventrecord\r\n\r\nEvent.propTypes = {\r\n    event: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}","// History component showing the records of created and joined events of the users\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport Eventrecord from './Event/Event_record';\r\nimport getaddr from './getaddr';\r\nimport useToken from '../useToken';\r\nimport { UserContext } from '../UserContext';\r\nimport \"../styles/components/History.css\";\r\n\r\n// Main component\r\nconst History = () => {\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const {token} = useToken();\r\n  const {user, setUser} = useContext(UserContext);\r\n\r\n  // get the private event or joined events (individual users) form datebase\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const eventsFromServer = await fetchEvents()\r\n      setEvents(eventsFromServer)\r\n    }\r\n    getEvents()\r\n  }, [user])\r\n\r\n  // GET request\r\n  const fetchEvents = async () => {\r\n    const res = await fetch(getaddr()+'joined_events/'+user.user_id, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <div className=\"history--container\">\r\n      <h1 className=\"history--title\">Record</h1>\r\n      <div className=\"history--list\">\r\n        <ul>\r\n          {/* render a record for each event */}\r\n          {events.map((event, index) => {\r\n            return (\r\n                <Eventrecord key={index} event={event} index={index} />\r\n            )\r\n          })}\r\n          {events.length===0&&<h1 className=\"history--title\">No joined/organized event</h1>}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History;","// My Page component\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Header from '../components/Header';\r\nimport Navbar from '../components/Navbar';\r\nimport Schedule from '../components/Calendars/Schedule';\r\nimport History from '../components/History';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/pages/MyCalendar.css'\r\n\r\n// Main component\r\nconst MyCalendar = () => {\r\n\r\n  // setting the doc. title\r\n  useEffect(() => {\r\n    document.title = 'My Calendar';\r\n  }, [])\r\n\r\n  // The basic layout of the page using BS4 grid\r\n  return (\r\n    <Container className=\"home\" fluid>\r\n      <Header />\r\n      <Navbar />\r\n      <Row className=\"main-content\">\r\n        <Col xs={8}>\r\n          <Schedule />\r\n        </Col>\r\n        <Col xs={4}>\r\n          <History />\r\n        </Col>\r\n      </Row>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MyCalendar","// this is the js file for creating the result cards in search page\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"../../styles/components/Event/SearchResultCard.css\"\r\nimport PropTypes from 'prop-types';\r\nimport { FormButton } from \"../CustomButton.js\";\r\nimport { Container, Row, Col, Modal, ListGroup, Button, ListGroupItem } from 'react-bootstrap'\r\nimport { EventModal } from './Events'\r\n\r\n// Main component\r\n// props: \r\n// event: default value is empty for all fields -> prevent errors\r\nconst SearchResultCard = ({ event = {\r\n    user_id: '',\r\n    event_name: '',\r\n    start_date: '',\r\n    start_time: '',\r\n    end_date: '',\r\n    end_time: '',\r\n    visible: 0,\r\n    repeat: 0,\r\n    venue: '',\r\n    capacity: 0,\r\n    description: '',\r\n    ticket: 10,\r\n    refund: 1,\r\n    refund_days: 0,\r\n    category: '',\r\n  }, onClick }) => {\r\n\r\n    const [showMore, setShowMore] = useState({ 'toggle': false , 'event': {}});\r\n\r\n    return (\r\n        <>\r\n            {/* // the container for the result card */}\r\n            <div className=\"SR-card-container\" onClick={() => setShowMore({'toggle': true, 'event': event})}>\r\n                {/* the container for the event image */}\r\n                <div className=\"SR-img-container\">\r\n                    {/* the price tag for the event */}\r\n                    <div className=\"SR-fee\">${event.ticket}</div>\r\n                    {/* the event image on the result card */}\r\n                    <img src={event.img_loc} alt=\"event image\"></img>\r\n                </div>\r\n                {/* the part that show the title */}\r\n                <div className=\"SR-title\">{event.name}</div>\r\n                {/* the container for the information of the event in result card */}\r\n                <div className=\"SR-info-container\">\r\n                    <div className=\"SR-Organizer\">{event.username}</div>\r\n                    <div className=\"SR-Date\">Date:&nbsp;{event.start_date}</div>\r\n                    <div className=\"SR-Time\">Time:&nbsp;{event.start_time}</div>\r\n                    <div className=\"SR-Venue\">Venue:&nbsp;{event.venue}</div>\r\n                </div>\r\n            </div>\r\n            <EventModal showEvent={showMore} setShow={setShowMore} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultCard\r\n\r\nEvent.propTypes = {\r\n    event: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}","// Search page component\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/pages/SearchPage.css';\r\nimport { Search } from 'react-bootstrap-icons';\r\nimport SearchResultCard from '../components/Event/SearchResultCard'\r\nimport CustomDatePicker from '../components/CustomeDatePicker';\r\nimport getaddr from '../components/getaddr'\r\n\r\n\r\nconst SearchPage = () => {\r\n  // different price range\r\n  const priceRange = [{\r\n    'name': 'Free',\r\n    'min': 0,\r\n    'max': 0\r\n  }, {\r\n    'name': '$1 - $50',\r\n    'min': 1,\r\n    'max': 50\r\n  }, {\r\n    'name': '$51 - $150',\r\n    'min': 51,\r\n    'max': 150\r\n  }, {\r\n    'name': '$151 - $500',\r\n    'min': 151,\r\n    'max': 500\r\n  }, {\r\n    'name': '$500+',\r\n    'min': 501,\r\n    'max': 1000\r\n  }]\r\n\r\n  // initial search state\r\n  const initialSearchInfo = {\r\n    'event_name': '',\r\n    'min': 0,\r\n    'max': 0,\r\n    'category': []\r\n  }\r\n  // different event category\r\n  const categories = ['Academic', 'Sport', 'Music', 'Health', 'Festival', 'Career', 'Others']\r\n\r\n  const [startSelectedDate, setStartSelectedDate] = useState(new Date());\r\n  const [endSelectedDate, setEndSelectedDate] = useState(new Date());\r\n  const [searchInfo, setSearchInfo] = useState(initialSearchInfo);\r\n  const history = useHistory();\r\n\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  useEffect(() => {\r\n    document.title = 'Search Page';\r\n\r\n  }, [searchInfo, history, searchResult]);\r\n\r\n  // search input change handler\r\n  const onChangeHandler = (event) => {\r\n    if (event.target.type === 'radio') {\r\n      setSearchInfo({ ...searchInfo, 'min': parseInt(event.target.value.split('-')[0]), 'max': parseInt(event.target.value.split('-')[1]) });\r\n    } else if (event.target.type === 'checkbox') {\r\n      let categoryArr = searchInfo.category.slice();\r\n      if (event.target.checked) {\r\n        categoryArr.push(event.target.value);\r\n      } else {\r\n        const index = categoryArr.indexOf(event.target.value);\r\n        if (index > -1) {\r\n          categoryArr.splice(index, 1);\r\n        }\r\n      }\r\n      setSearchInfo({ ...searchInfo, 'category': categoryArr });\r\n    } else {\r\n      setSearchInfo({ ...searchInfo, [event.target.name]: event.target.value });\r\n    }\r\n  }\r\n\r\n  // search submit handler\r\n  const submitSearch = async (event) => {\r\n    // creating url queries\r\n    const params = new URLSearchParams();\r\n\r\n    params.append('name', searchInfo['event_name']);\r\n    params.append('min', searchInfo['min']);\r\n    params.append('max', searchInfo['max']);\r\n    params.append('start_date', startSelectedDate.toJSON().split('T')[0]);\r\n    params.append('end_date', endSelectedDate.toJSON().split('T')[0]);\r\n    params.append('category', JSON.stringify(searchInfo['category']));\r\n\r\n    // get request\r\n    fetch(getaddr()+'filter_events/?'+params.toString(), {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      setSearchResult(data);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className=\"home\" fluid>\r\n      {/* the header of the website */}\r\n      <Header />\r\n      {/* the navigation bar */}\r\n      <Navbar />\r\n      {/* this is the outer container for the search bar, and also box that includes searching category */}\r\n      <Row className=\"Search-box-container\">\r\n        {/* this is the container to create specific space for the search bar */}\r\n        <div className=\"Search-bar-container\">\r\n          {/* The search bar */}\r\n          <Col className=\"Search-bar\">\r\n            <input type=\"text\" name=\"event_name\" placeholder=\"Search Events...\" onChange={onChangeHandler}></input>\r\n            <button className=\"Search-button\" onClick={submitSearch}><Search /></button>\r\n          </Col>\r\n        </div>\r\n        {/* the container for the price category in the category box */}\r\n        <Row className=\"Price-container\">\r\n          {/* the input row for the price category */}\r\n          <Col xs={1} className=\"p-tag\">Price:&nbsp;</Col>\r\n          {priceRange.map((price, index) => (\r\n            <Col xs key={index}>\r\n              <input type=\"radio\" className=\"p-choice-1\" name=\"price\" value={`${price.min}-${price.max}`} onChange={onChangeHandler}></input>\r\n              <label htmlFor=\"p-choice-1\">&nbsp;{price.name}</label><br></br>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        {/* the container for the date category in the category box */}\r\n        <Row className=\"Date-container\">\r\n          {/* the datepicker for picking event starting date*/}\r\n          <Col xs={6} className=\"Datepicker-container\">\r\n            <div className=\"d-tag\">Start Date:&nbsp;</div>\r\n            <div >\r\n              <CustomDatePicker\r\n                onChangeHandler={(date) => setStartSelectedDate(date)}\r\n                startDate={startSelectedDate}\r\n                placeholder=\"Select Start Time\"\r\n                showTime={false}\r\n              />\r\n            </div>\r\n          </Col>\r\n          {/* the datepicker for picking event ending date */}\r\n          <Col xs={6} className=\"Datepicker-container\">\r\n            <div className=\"d-tag\">End Date:&nbsp;</div>\r\n            <div>\r\n              <CustomDatePicker\r\n                onChangeHandler={(date) => setEndSelectedDate(date)}\r\n                startDate={endSelectedDate}\r\n                placeholder=\"Select Start Time\"\r\n                showTime={false}\r\n                minDate={startSelectedDate}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* the container for the area for choosing event category */}\r\n        <Row className=\"Category-container\">\r\n          {/* the checkbox for picking event category for searching */}\r\n          <Col xs={1} className=\"c-tag\">Type:&nbsp;</Col>\r\n          {categories.map((category, index) => (\r\n            <Col xs key={index}>\r\n              <input type=\"checkbox\" className=\"c-choice-1\" value={category} name=\"category\" onChange={onChangeHandler}></input>\r\n              <label htmlFor=\"c-choice-1\">&nbsp;{category}</label><br></br>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Row>\r\n      {/* the area to show search result */}\r\n      <Row className=\"Search-results\">\r\n        {searchResult.length === 0 ? <h1>No matching results</h1> :\r\n          searchResult.map((event, index) => (\r\n            <Col xs={6} md={4}>\r\n              {/* the card to show the result event */}\r\n              <SearchResultCard event={event} key={index} />\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchPage","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport useToken from './useToken'\r\n//preventing user from accessing pages unless login\r\n//done by checking whether there is token stored in local storage\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const {token} = useToken();\r\n    return (\r\n        <Route {...rest} render={(props) => (!token? <Redirect to='/login' />:<Component {...props} />)}/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport useToken from '../useToken';\r\nimport getaddr from '../components/getaddr';\r\nimport {UserContext} from \"../UserContext\";\r\n\r\n//example for getting user info, update profile pic and potentially other info\r\nconst User = () => {\r\n    const {token} = useToken();\r\n    const {user, setUser} = useContext(UserContext);\r\n    //this gets the user info by token, change to /userinfo/:uid for general user\r\n    const getUser = async () => {\r\n      try{\r\n        //change getaddr() to getaddr(isLocal=false) to make it use remote address\r\n        //basically passing the token by the header\r\n        let res = await fetch(getaddr()+'user', {\r\n          method: 'GET',\r\n          headers: {\r\n            'auth': token,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          //body: JSON.stringify({token:token}),\r\n        });\r\n        let body = await res.json();\r\n        setUser(body);\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    var pfp;\r\n    const fileSelectedHandler = event => {\r\n      pfp = event.target.files[0];\r\n    }\r\n\r\n    const fileUploadHandler = async event => {\r\n      event.preventDefault();\r\n      let data = new FormData();\r\n      if(!pfp) return;\r\n      data.append('pfp', pfp);\r\n      await fetch(getaddr()+'updatepfp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'auth': token,\r\n          //'Content-Type': 'multipart/form-data',\r\n        },\r\n        body: data,\r\n      });\r\n      await getUser();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(user).map(([key, val])=>((key=='img_loc')?(<img src={val} style={{width:\"150px\"}}/>):<p>{key} : {val}</p>))}\r\n            <form>\r\n                <input type=\"file\" accept=\"image/*\" onChange={fileSelectedHandler}></input>\r\n                <button type=\"submit\" onClick={fileUploadHandler}>submit</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React, {useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport getaddr from '../components/getaddr';\r\n\r\nconst ResetPassword = () => {\r\n    //from https://www.youtube.com/watch?v=jd6Sz2sDPJc&ab_channel=uidotdev\r\n    const {search} = useLocation();\r\n    const searchParams = new URLSearchParams(search);\r\n    const token = searchParams.get('token');\r\n    const user_id = searchParams.get('user_id');\r\n\r\n    const [resetResult, setResetResult] = useState({errormsg:\"\",alert:false})\r\n    const [valid, setValid] = useState(true);\r\n    const [password, setPassword] = useState('');\r\n    const [doublepassword, setDoublePassword] = useState('');\r\n    const onChangeHandler = event => {\r\n        event.preventDefault();\r\n        setResetResult({errormsg:\"\",alert:false});\r\n        if(event.target.name=='pw'){\r\n            doublepassword!=event.target.value?setValid(false):setValid(true);\r\n            setPassword(event.target.value);\r\n        }\r\n        else{\r\n            password!=event.target.value?setValid(false):setValid(true);\r\n            setDoublePassword(event.target.value);\r\n        }\r\n    };\r\n    const sendRequest = async event => {\r\n        event.preventDefault();\r\n        if(!password||!valid){\r\n            setResetResult({errormsg:'No fields should be blank', alert:true});\r\n            return;\r\n        };\r\n        let res = await fetch(getaddr()+'reset_password?token='+token+'&user_id='+user_id, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({password:password}),\r\n          });\r\n          let body = await res.json();\r\n          if (!res.ok){\r\n                setResetResult({'errorMsg':body['error'], 'alert':true});\r\n          }else{\r\n            setResetResult({'errorMsg':'You have successfully changed your password! You can try to login with new password', 'alert':true});\r\n          }\r\n    };\r\n    return (\r\n        <div>\r\n            {(token&&user_id)&&\r\n            <form>\r\n                <label for='pw'><b>Password</b></label><br/>\r\n                <input type='password' name='pw' id='pw' placeholder='password' onChange={onChangeHandler}></input><br/>\r\n                <label for='doublepw'><b>Input password again</b></label><br/>\r\n                <input type='password' name='doublepw' id='doublepw'  placeholder='Password again' onChange={onChangeHandler}></input><br/>\r\n                {!valid==true&&<div style={{color:'red'}}>Password does not match</div>}\r\n                <button type=\"submit\" style={{marginTop:'15px'}} onClick={sendRequest}>Submit</button>\r\n                {resetResult.alert&&<div style={{color:'red'}}>{resetResult.errorMsg}</div>}\r\n            </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","// The App component of CalEvents which routes different links\r\nimport React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport MyCalendar from './pages/MyCalendar';\r\nimport SearchPage from './pages/SearchPage';\r\nimport Events from './components/Event/Events';\r\nimport './styles/App.css';\r\nimport useToken from './useToken';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport User from './pages/User';\r\n// import JoinEvent from './pages/JoinEvent';\r\nimport {UserContext} from  './UserContext';\r\nimport getaddr from './components/getaddr';\r\nimport ResetPassword from './pages/ResetPassword';\r\n\r\nfunction App() {\r\n \r\n  const defaultUser = \r\n  {\r\n    type:0,\r\n    user_id:0,\r\n    username:\"\",\r\n    email:\"\",\r\n    img_loc:\"\",\r\n    account_balance:\"\",\r\n  }\r\n  const [user,setUser] = useState(defaultUser);\r\n  const {token,setToken} = useToken();\r\n\r\n  const getUser = async () => {\r\n    try{\r\n      //change getaddr() to getaddr(isLocal=false) to make it use remote address\r\n      //basically passing the token by the header\r\n      let res = await fetch(getaddr()+'user', {\r\n        method: 'GET',\r\n        headers: {\r\n          'auth': token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        //body: JSON.stringify({token:token}),\r\n      });\r\n      let body = await res.json();\r\n      setUser(body);\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Route page with different address */}\r\n      <Router>\r\n        {/* Protected route requires authentication */}\r\n        <UserContext.Provider value={{user,setUser}}>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <ProtectedRoute path=\"/\" exact component={Home} />\r\n          <ProtectedRoute path=\"/events\" exact component={Events}/>\r\n          <ProtectedRoute path=\"/myCalendar\" exact component={MyCalendar} />\r\n          <ProtectedRoute path=\"/search\" exact component={SearchPage} />\r\n\r\n          {/*The following links are for functional illustration purpose */}\r\n          <ProtectedRoute path=\"/user\" exact component={User} />\r\n          {/* <ProtectedRoute path=\"/joinEvent\" exact component={JoinEvent} /> */}\r\n          \r\n        </UserContext.Provider>\r\n        <Route path=\"/reset_password\" component={ResetPassword}></Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}